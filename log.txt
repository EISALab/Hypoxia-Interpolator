[1] 6985.453
[1] "interpolationg using IDW"
[1] "r: 5"
[1] "interpolating using Reml"
[1] "variance explained"
[1] 0.9821199
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"5976.6420" "  -0.1887" "  -1.3626" " -10.1620" "  -0.2241" "2479.8117" 
        phi 
"   0.1312" 
Practical Range with cor=0.05 for asymptotic range: 0.3930259

likfit: maximised log-likelihood = -95.88
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5460.2428" "   -0.3744" "    1.3048" "   58.7315" "    1.8098" "  486.3351" 
         phi 
"   11.4635" 
Practical Range with cor=0.05 for asymptotic range: 34.34154

likfit: maximised log-likelihood = -80.8
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3597.8869" "    0.3540" "    0.7325" "   -8.8339" "   -0.3734" "  937.8646" 
         phi 
"    0.1360" 
Practical Range with cor=0.05 for asymptotic range: 0.4075091

likfit: maximised log-likelihood = -87.13
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-734.0986" "   0.1699" "   0.0968" " -25.6337" "  -0.7490" " 547.7035" 
        phi 
"   5.3124" 
Practical Range with cor=0.05 for asymptotic range: 15.91458

likfit: maximised log-likelihood = -82.25
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1564.4128" "   -0.3856" "    0.3078" "  -35.2460" "   -0.9756" "  239.7498" 
         phi 
"    0.1419" 
Practical Range with cor=0.05 for asymptotic range: 0.4249794

likfit: maximised log-likelihood = -74.86
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-30.1374" "  0.0046" "  0.0053" " -0.3238" " -0.0077" "  0.6849" " 12.3773" 
Practical Range with cor=0.05 for asymptotic range: 37.07904

likfit: maximised log-likelihood = -21.62
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "interpolating using Baye"
[1] "variance explained"
[1] 0.9821199
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 15  8  8 12  6 10  7  9  7  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  4 15  9  8  9 13  8 12 10  4  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 14  9  5  9  7 12 10  8  5  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 11 12 14  9  5  8  7  8  5 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 13  7  8  7 10  8  9  9  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  8  8  4  9 11 15 10 11  5 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "r: 10"
[1] "interpolating using Reml"
[1] "variance explained"
[1] 0.9940075
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"7134.6684" "  -0.3659" "  -1.6045" " -16.4789" "  -0.4182" "1144.9756" 
        phi 
"   0.1926" 
Practical Range with cor=0.05 for asymptotic range: 0.5771437

likfit: maximised log-likelihood = -88.93
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5290.6060" "   -0.3951" "    1.2674" "   56.9620" "    1.7565" "  552.0373" 
         phi 
"    9.2672" 
Practical Range with cor=0.05 for asymptotic range: 27.76216

likfit: maximised log-likelihood = -82.13
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3961.1621" "    0.4075" "    0.8093" "   -6.5526" "   -0.3050" "  712.6987" 
         phi 
"    0.1017" 
Practical Range with cor=0.05 for asymptotic range: 0.3047484

likfit: maximised log-likelihood = -84.66
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-990.5023" "   0.1990" "   0.1521" " -23.8356" "  -0.6959" " 500.3112" 
        phi 
"   4.8159" 
Practical Range with cor=0.05 for asymptotic range: 14.42717

likfit: maximised log-likelihood = -81.44
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1593.0260" "   -0.3805" "    0.3137" "  -35.1347" "   -0.9729" "  242.6606" 
         phi 
"    0.1934" 
Practical Range with cor=0.05 for asymptotic range: 0.5794551

likfit: maximised log-likelihood = -74.97
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"229.6391" "  0.0234" " -0.0864" "-14.0626" " -0.2868" "301.6780" "  4.3253" 
Practical Range with cor=0.05 for asymptotic range: 12.95738

likfit: maximised log-likelihood = -76.9
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"179.4424" "  0.0867" " -0.0660" " -9.8576" " -0.2668" "294.5281" "  0.1648" 
Practical Range with cor=0.05 for asymptotic range: 0.4938095

likfit: maximised log-likelihood = -76.71
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"512.6717" " -0.0335" " -0.1044" "  2.4468" "  0.0935" "254.2796" "  0.1949" 
Practical Range with cor=0.05 for asymptotic range: 0.5839365

likfit: maximised log-likelihood = -75.39
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-67.3809" " -0.0498" "  0.0525" " 15.9907" "  0.4029" "212.9867" "  0.1609" 
Practical Range with cor=0.05 for asymptotic range: 0.4820538

likfit: maximised log-likelihood = -73.79
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"658.0724" " -0.0849" " -0.1751" "-20.6007" " -0.5303" "139.1347" "  0.1840" 
Practical Range with cor=0.05 for asymptotic range: 0.551153

likfit: maximised log-likelihood = -69.96
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"11.0720" " 0.0001" "-0.0040" "-0.8046" "-0.0206" " 0.1904" " 0.1610" 
Practical Range with cor=0.05 for asymptotic range: 0.4823996

likfit: maximised log-likelihood = -10.61
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "interpolating using Baye"
[1] "variance explained"
[1] 0.9940075
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 11  6 11 11  8  9 11  6  4 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  9  8 11  7 10  9  8  7 11  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 12 18 12  4  8  5  9 10  3  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  5 10 13  9 11  9  7 11  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 10 16 11  5  8  7  8  4 11  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 14 16  5 11  6  8  7  9  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 13 15 12  7  6  2  6 14  5  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16  8  7  9 11 10  9  9  8  5  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 10 14  9  6 10  4 10  4  8  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20  7 13  5  8  8 10  8 12  4  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 21 17  8 10  3  6  4 10  9  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "r: 15"
[1] "interpolating using Reml"
[1] "variance explained"
[1] 0.9987866
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6769.8227" "  -0.4323" "  -1.4449" "  20.0021" "   0.5131" " 978.9669" 
        phi 
"   0.2062" 
Practical Range with cor=0.05 for asymptotic range: 0.6176905

likfit: maximised log-likelihood = -87.52
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-5277.852" "   -0.409" "    1.276" "   61.777" "    1.882" "  537.711" 
        phi 
"   10.328" 
Practical Range with cor=0.05 for asymptotic range: 30.94042

likfit: maximised log-likelihood = -81.81
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3842.0362" "    0.4287" "    0.7588" "  -17.6582" "   -0.5883" "  683.0749" 
         phi 
"    0.1014" 
Practical Range with cor=0.05 for asymptotic range: 0.303736

likfit: maximised log-likelihood = -84.28
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-926.6855" "   0.2098" "   0.1245" " -30.0872" "  -0.8554" " 476.6450" 
        phi 
"   4.8574" 
Practical Range with cor=0.05 for asymptotic range: 14.55133

likfit: maximised log-likelihood = -81.01
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1588.3655" "   -0.3785" "    0.3105" "  -36.1182" "   -0.9981" "  241.5609" 
         phi 
"    0.1820" 
Practical Range with cor=0.05 for asymptotic range: 0.5452691

likfit: maximised log-likelihood = -74.92
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"235.1471" "  0.0278" " -0.0908" "-15.4091" " -0.3208" "291.9075" "  4.4552" 
Practical Range with cor=0.05 for asymptotic range: 13.34647

likfit: maximised log-likelihood = -76.6
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"182.0832" "  0.0866" " -0.0676" "-10.3991" " -0.2813" "293.7577" "  0.1347" 
Practical Range with cor=0.05 for asymptotic range: 0.4035042

likfit: maximised log-likelihood = -76.69
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"484.0865" " -0.0395" " -0.0912" "  5.6369" "  0.1753" "252.4322" "  0.1903" 
Practical Range with cor=0.05 for asymptotic range: 0.5699936

likfit: maximised log-likelihood = -75.32
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-68.5779" " -0.0465" "  0.0518" " 15.7141" "  0.3965" "214.6519" "  0.0995" 
Practical Range with cor=0.05 for asymptotic range: 0.2981621

likfit: maximised log-likelihood = -73.86
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"632.3229" " -0.0913" " -0.1658" "-19.0829" " -0.4922" "141.7054" "  0.1772" 
Practical Range with cor=0.05 for asymptotic range: 0.5308419

likfit: maximised log-likelihood = -70.12
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
" 31.7846" "  0.0951" " -0.0329" " -8.3974" " -0.2189" "136.8720" "  0.1621" 
Practical Range with cor=0.05 for asymptotic range: 0.4855093

likfit: maximised log-likelihood = -69.81
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"536.2862" "  0.0866" " -0.1275" " -0.1203" "  0.0389" " 99.8351" "  2.4971" 
Practical Range with cor=0.05 for asymptotic range: 7.480655

likfit: maximised log-likelihood = -66.97
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"248.5715" "  0.0000" " -0.1009" "-23.5824" " -0.6123" " 84.4653" "  0.1370" 
Practical Range with cor=0.05 for asymptotic range: 0.4103845

likfit: maximised log-likelihood = -65.47
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-257.3297" "   0.0265" "   0.0541" "   0.9208" "   0.0302" "  88.9858" 
        phi 
"   2.9980" 
Practical Range with cor=0.05 for asymptotic range: 8.981202

likfit: maximised log-likelihood = -65.93
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"529.0021" "  0.0335" " -0.1132" "  2.3981" "  0.0746" " 65.3362" "  9.1288" 
Practical Range with cor=0.05 for asymptotic range: 27.34728

likfit: maximised log-likelihood = -62.94
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 3.3160" "-0.0013" "-0.0006" "-0.0298" "-0.0008" " 0.0896" " 0.1906" 
Practical Range with cor=0.05 for asymptotic range: 0.5711017

likfit: maximised log-likelihood = -3.826
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "interpolating using Baye"
[1] "variance explained"
[1] 0.9987866
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 11 10  9  7  5 11 11  8  8  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 11 11  7  7  8 11  6 10  8 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18  7 16 11  9  4  7 10  5 10  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 11 11 11  5 11  8 11  3  8 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 21 18  6  8  3  4  6  7  5  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  9 10  7 10  8 11  8  9  4 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 10 12 11  6  6  6  9  9  3 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  6 11  9  7 11  9 12 11  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  5 13  6 11  7 11  9  8  6 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 12 10  9 11 10 10  6  5  9  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 10  8 10  5 13 10  7 10  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  9 12  6 11  5  6 12 11  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 13  8  8 10 15  8  6 10  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 15 15 13  6  7 10  7  8  6  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  9  9 11  8 11 12  5  6  8 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 10 12 13  8  7  4  9 10  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
    user   system  elapsed 
1429.195   93.102 9492.665 
[1] "removing logger:"
[1] "10384436"
[1] "variance explained"
[1] 0.9837638
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"5648.7608" "   0.0346" "  -1.3070" " -10.7076" "  -0.3339" "2858.9600" 
        phi 
"   0.1893" 
Practical Range with cor=0.05 for asymptotic range: 0.567169

likfit: maximised log-likelihood = -91.77
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5749.2619" "   -0.2392" "    1.3403" "   50.5295" "    1.5544" "  572.1496" 
         phi 
"    8.4805" 
Practical Range with cor=0.05 for asymptotic range: 25.40531

likfit: maximised log-likelihood = -77.92
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3000.5081" "    0.2848" "    0.6050" "  -11.3065" "   -0.4229" " 1210.3783" 
         phi 
"    0.1870" 
Practical Range with cor=0.05 for asymptotic range: 0.5602547

likfit: maximised log-likelihood = -84.46
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1784.9506" "   0.3941" "  -0.3596" "  33.7410" "   0.9455" " 262.2827" 
        phi 
"   0.1894" 
Practical Range with cor=0.05 for asymptotic range: 0.5674274

likfit: maximised log-likelihood = -71.46
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"305.5081" " -0.1101" " -0.0822" " -9.2894" " -0.1397" "294.2061" "  4.7295" 
Practical Range with cor=0.05 for asymptotic range: 14.1682

likfit: maximised log-likelihood = -72.41
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-35.1144" "  0.0116" "  0.0055" " -0.5201" " -0.0153" "  0.7406" " 16.5902" 
Practical Range with cor=0.05 for asymptotic range: 49.69969

likfit: maximised log-likelihood = -20.58
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9837638
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  7  7 12  9  5 10  7  8 14 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  9 10  4 12  9  9  9  4  9 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 14  7  5  7  7 13 12  8  9  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 13 10 10  9 11  4  4  3 10  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16  8  8 11 12  7  5  8  8  5 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  4 10  8  5 14  9 12  9 10 12  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9948603
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"7226.7333" "  -0.5589" "  -1.5676" "   4.0096" "   0.1468" "1031.7461" 
        phi 
"   0.2656" 
Practical Range with cor=0.05 for asymptotic range: 0.7956711

likfit: maximised log-likelihood = -83.1
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5554.8624" "   -0.3045" "    1.3067" "   51.9256" "    1.6012" "  564.2445" 
         phi 
"    8.3126" 
Practical Range with cor=0.05 for asymptotic range: 24.90225

likfit: maximised log-likelihood = -77.81
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3480.2198" "    0.4615" "    0.6852" "  -15.4469" "   -0.5599" "  789.2062" 
         phi 
"    0.1925" 
Practical Range with cor=0.05 for asymptotic range: 0.5766624

likfit: maximised log-likelihood = -80.83
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1905.7828" "   0.3457" "  -0.3785" "  35.2803" "   0.9936" " 273.5111" 
        phi 
"   0.1668" 
Practical Range with cor=0.05 for asymptotic range: 0.4998234

likfit: maximised log-likelihood = -71.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"379.5572" " -0.1358" " -0.0942" " -8.3647" " -0.1108" "276.4357" "  4.8462" 
Practical Range with cor=0.05 for asymptotic range: 14.51793

likfit: maximised log-likelihood = -71.87
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"381.9509" " -0.2463" " -0.0369" " 12.2262" "  0.3562" "317.9338" "  3.2901" 
Practical Range with cor=0.05 for asymptotic range: 9.856237

likfit: maximised log-likelihood = -73.09
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-515.0681" "  -0.0495" "   0.1424" "  12.9791" "   0.3269" " 296.6540" 
        phi 
"   0.1648" 
Practical Range with cor=0.05 for asymptotic range: 0.4935598

likfit: maximised log-likelihood = -72.51
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-254.8790" "   0.0788" "   0.0169" " -15.8185" "  -0.4299" " 252.2609" 
        phi 
"   0.1661" 
Practical Range with cor=0.05 for asymptotic range: 0.4976211

likfit: maximised log-likelihood = -71.13
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"606.1308" " -0.1211" " -0.1434" "-12.0166" " -0.3054" "163.5860" "  0.1879" 
Practical Range with cor=0.05 for asymptotic range: 0.5629273

likfit: maximised log-likelihood = -67.45
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
" 95.8298" "  0.1175" " -0.0683" "-18.5742" " -0.4941" "135.3993" "  0.1043" 
Practical Range with cor=0.05 for asymptotic range: 0.3124101

likfit: maximised log-likelihood = -65.84
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"13.9472" "-0.0008" "-0.0043" "-0.6653" "-0.0168" " 0.1684" " 0.1977" 
Practical Range with cor=0.05 for asymptotic range: 0.5922233

likfit: maximised log-likelihood = -8.982
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9948603
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  9  9 11  6  5  7  9 15  7 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 16 11  8  9 12  4  5 10 10  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 14 12  7  4  8 11 10 12  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18  9  9 10  8  9  7 15  4  4  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 11  9 13  7  5 10 14  6  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 10  9  8  6 10 12  8 11 11  2

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  3  8 13  7 10  6  7  9 13 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 21 13 10 15  6  6  5  6  6  8  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  8  7  5 11 12  9 16  8 11  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 10 12  4  5 12 11  6  7 10  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 11 10  7 13  6 11  9  9  7  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9992755
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6677.2400" "  -0.5220" "  -1.3767" "  41.5849" "   1.1119" " 676.6584" 
        phi 
"   0.1822" 
Practical Range with cor=0.05 for asymptotic range: 0.5458378

likfit: maximised log-likelihood = -79.52
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5533.0917" "   -0.3057" "    1.3082" "   55.0221" "    1.6833" "  547.2313" 
         phi 
"    9.7673" 
Practical Range with cor=0.05 for asymptotic range: 29.2603

likfit: maximised log-likelihood = -77.45
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3309.9008" "    0.4509" "    0.6271" "  -26.5026" "   -0.8437" "  804.9478" 
         phi 
"    0.1780" 
Practical Range with cor=0.05 for asymptotic range: 0.5332497

likfit: maximised log-likelihood = -80.99
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1864.0033" "   0.3476" "  -0.3634" "  38.3478" "   1.0723" " 261.3956" 
        phi 
"   0.1669" 
Practical Range with cor=0.05 for asymptotic range: 0.4999341

likfit: maximised log-likelihood = -71.43
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"347.1091" " -0.1340" " -0.0827" " -6.0575" " -0.0512" "287.1194" "  4.6895" 
Practical Range with cor=0.05 for asymptotic range: 14.04854

likfit: maximised log-likelihood = -72.2
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"315.8420" " -0.2359" " -0.0117" " 18.0817" "  0.5051" "301.7612" "  6.3512" 
Practical Range with cor=0.05 for asymptotic range: 19.02651

likfit: maximised log-likelihood = -72.58
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-471.4181" "  -0.0499" "   0.1272" "  10.1132" "   0.2539" " 300.3277" 
        phi 
"   0.1653" 
Practical Range with cor=0.05 for asymptotic range: 0.4953201

likfit: maximised log-likelihood = -72.61
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-236.0839" "   0.0774" "   0.0102" " -17.2301" "  -0.4667" " 249.8458" 
        phi 
"   0.1661" 
Practical Range with cor=0.05 for asymptotic range: 0.4977404

likfit: maximised log-likelihood = -71.05
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"560.2884" " -0.1190" " -0.1297" "-10.0213" " -0.2547" "167.1073" "  0.1654" 
Practical Range with cor=0.05 for asymptotic range: 0.4955294

likfit: maximised log-likelihood = -67.63
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"125.6102" "  0.1171" " -0.0772" "-19.8659" " -0.5273" "132.0731" "  0.1767" 
Practical Range with cor=0.05 for asymptotic range: 0.5294711

likfit: maximised log-likelihood = -65.63
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-297.2285" "  -0.1057" "   0.0558" " -10.4345" "  -0.3032" " 118.4591" 
        phi 
"   0.2140" 
Practical Range with cor=0.05 for asymptotic range: 0.6411068

likfit: maximised log-likelihood = -64.71
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-543.8746" "  -0.0534" "   0.1749" "  25.6334" "   0.6504" "  74.3211" 
        phi 
"   0.1864" 
Practical Range with cor=0.05 for asymptotic range: 0.5583944

likfit: maximised log-likelihood = -60.74
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"252.6590" " -0.0339" " -0.0490" "  0.9030" "  0.0199" " 94.8235" "  3.2993" 
Practical Range with cor=0.05 for asymptotic range: 9.883801

likfit: maximised log-likelihood = -62.8
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-410.5673" "  -0.0462" "   0.0924" "  -0.3383" "  -0.0132" "  70.1263" 
        phi 
"   4.2092" 
Practical Range with cor=0.05 for asymptotic range: 12.60951

likfit: maximised log-likelihood = -60.23
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-256.4613" "   0.0122" "   0.0534" "  -0.5057" "  -0.0193" "  70.9891" 
        phi 
"   0.1615" 
Practical Range with cor=0.05 for asymptotic range: 0.4837195

likfit: maximised log-likelihood = -60.35
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 2.2029" " 0.0000" "-0.0002" " 0.1373" " 0.0038" " 0.0040" " 0.1052" 
Practical Range with cor=0.05 for asymptotic range: 0.3151534

likfit: maximised log-likelihood = 22.91
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9992755
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  4  9 11 17  8  7  6  9  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  4 13  9  7  7 13  7 12 12  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 11  7  9  8 12  6  7  8  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18 11 11  7  8  9  3 11  3  8 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 13 14  9  6  7 10  6  5 11  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  7  7  7  7  6 10  8 14 13 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 11 12  7  6 10 10 10  2 12 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 16 14  9  5  7  5  4  7 13  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 13 10  9 17  6  6 13  2  4  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  6  8 15 12 11  5  8  8  6 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18  9  6  9  9  9  8  7 12  8  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 15  9  3  6  5 12  9  6  8 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 10  8 11  7 14  8  7  6 11 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  6  7  8  7  9 12 10 11 12 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5  9  8  9  5  8  9 17  9 11 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 14  7 10  6 10 10  9  5  8  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10384437"
[1] "variance explained"
[1] 0.9827099
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6652.5373" "  -0.0231" "  -1.5165" " -10.6256" "  -0.3256" "2455.7923" 
        phi 
"  17.7754" 
Practical Range with cor=0.05 for asymptotic range: 53.25034

likfit: maximised log-likelihood = -89.6
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-6192.4415" "   -0.3132" "    1.4674" "   64.4244" "    1.9417" "  460.7229" 
         phi 
"   12.8292" 
Practical Range with cor=0.05 for asymptotic range: 38.43271

likfit: maximised log-likelihood = -75.91
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3697.7195" "    0.4147" "    0.7558" "   -5.3686" "   -0.2971" "  723.3472" 
         phi 
"   16.2007" 
Practical Range with cor=0.05 for asymptotic range: 48.53304

likfit: maximised log-likelihood = -79.4
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-135.9737" "   0.1860" "  -0.0235" " -19.0138" "  -0.5364" " 580.3002" 
        phi 
"   0.5931" 
Practical Range with cor=0.05 for asymptotic range: 1.776887

likfit: maximised log-likelihood = -78.21
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1426.2711" "   0.3721" "  -0.2630" "  42.2719" "   1.1622" " 244.2381" 
        phi 
"   0.5722" 
Practical Range with cor=0.05 for asymptotic range: 1.714059

likfit: maximised log-likelihood = -70.86
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-23.4946" "  0.0051" "  0.0043" " -0.1250" " -0.0031" "  0.7190" " 20.0384" 
Practical Range with cor=0.05 for asymptotic range: 60.02954

likfit: maximised log-likelihood = -20.15
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9827099
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6  6  9  8  7 12  9  9 12 10 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  9  9 12 11  6 11  6  8 11  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  4  8  6 11  4 16 12  9  8  9 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 12  8  9  9  7  8  9 11  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16  9 13  6  9  7  8  6  5 10 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  7  7  8  9 14  5  9 17 10  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9948307
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"8568.9927" "  -0.2976" "  -1.9534" " -35.5526" "  -0.9569" "1125.8227" 
        phi 
"   0.6049" 
Practical Range with cor=0.05 for asymptotic range: 1.812108

likfit: maximised log-likelihood = -83.85
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-6089.481" "   -0.323" "    1.444" "   62.916" "    1.898" "  514.212" 
        phi 
"   11.862" 
Practical Range with cor=0.05 for asymptotic range: 35.535

likfit: maximised log-likelihood = -76.93
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4482.0172" "    0.4753" "    0.9339" "    2.0763" "   -0.1072" "  475.6912" 
         phi 
"    0.6151" 
Practical Range with cor=0.05 for asymptotic range: 1.842529

likfit: maximised log-likelihood = -76.52
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-283.3804" "   0.1983" "   0.0092" " -17.6463" "  -0.4947" " 555.8385" 
        phi 
"   0.6179" 
Practical Range with cor=0.05 for asymptotic range: 1.851195

likfit: maximised log-likelihood = -77.85
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1478.9506" "   0.3664" "  -0.2746" "  41.8285" "   1.1497" " 246.8287" 
        phi 
"   0.5630" 
Practical Range with cor=0.05 for asymptotic range: 1.68653

likfit: maximised log-likelihood = -70.95
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"228.4170" "  0.0437" " -0.0831" "-11.6248" " -0.2238" "325.2171" "  0.5681" 
Practical Range with cor=0.05 for asymptotic range: 1.701888

likfit: maximised log-likelihood = -73.29
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"293.9058" "  0.0826" " -0.0931" "-11.4011" " -0.3089" "311.4327" "  0.5149" 
Practical Range with cor=0.05 for asymptotic range: 1.542367

likfit: maximised log-likelihood = -72.92
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"477.3012" " -0.0043" " -0.1043" "  0.1191" "  0.0337" "267.5464" "  3.7513" 
Practical Range with cor=0.05 for asymptotic range: 11.23798

likfit: maximised log-likelihood = -71.63
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-741.7081" "   0.0357" "   0.2223" "  32.8647" "   0.8498" " 147.8163" 
        phi 
"   1.1080" 
Practical Range with cor=0.05 for asymptotic range: 3.31937

likfit: maximised log-likelihood = -66.59
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"440.8527" " -0.0116" " -0.1129" " -9.8020" " -0.2597" "174.0024" "  0.4844" 
Practical Range with cor=0.05 for asymptotic range: 1.451053

likfit: maximised log-likelihood = -67.97
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 8.2849" " 0.0015" "-0.0034" "-0.7198" "-0.0186" " 0.2108" " 0.5491" 
Practical Range with cor=0.05 for asymptotic range: 1.644996

likfit: maximised log-likelihood = -10.89
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9948307
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 15  9  8 11 10  3  5  9  3 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  2 10  4  9  9 17  6 11 13 13  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  7 12 12 11 10  7  6  9  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 10  9 11  8  8 11  8  9  4  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 20 10  6  9  5  8 11  6  5  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 11  7 13  5  9 15 12  3  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 10  9 15  6 13 15  6 11  3  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  8 11  9  9  6 11  8  8  9 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 11 11  8 11  9  5  7  7  9 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6 10 11  5  9 13  8  9 11  8 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 11 12  7  7 12  8  9  9  9  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9992811
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"8278.4651" "  -0.3664" "  -1.8116" "   0.1335" "  -0.0407" " 527.7896" 
        phi 
"   7.6912" 
Practical Range with cor=0.05 for asymptotic range: 23.04092

likfit: maximised log-likelihood = -77.37
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-6042.2402" "   -0.3406" "    1.4404" "   65.6780" "    1.9727" "  513.0930" 
         phi 
"   13.6380" 
Practical Range with cor=0.05 for asymptotic range: 40.85573

likfit: maximised log-likelihood = -76.75
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4401.9276" "    0.5089" "    0.8872" "  -10.8744" "   -0.4416" "  389.5490" 
         phi 
"    0.6375" 
Practical Range with cor=0.05 for asymptotic range: 1.909873

likfit: maximised log-likelihood = -74.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-262.6730" "   0.2102" "  -0.0058" " -22.2735" "  -0.6141" " 530.0109" 
        phi 
"   0.5970" 
Practical Range with cor=0.05 for asymptotic range: 1.788526

likfit: maximised log-likelihood = -77.44
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1476.7762" "   0.3622" "  -0.2704" "  43.4805" "   1.1924" " 243.0657" 
        phi 
"   0.5998" 
Practical Range with cor=0.05 for asymptotic range: 1.796905

likfit: maximised log-likelihood = -70.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"238.2079" "  0.0483" " -0.0890" "-13.2633" " -0.2658" "314.7822" "  0.5665" 
Practical Range with cor=0.05 for asymptotic range: 1.697029

likfit: maximised log-likelihood = -73.01
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"296.8796" "  0.0827" " -0.0948" "-11.9443" " -0.3235" "310.5782" "  0.5361" 
Practical Range with cor=0.05 for asymptotic range: 1.605873

likfit: maximised log-likelihood = -72.9
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"471.8650" " -0.0112" " -0.0970" "  2.8779" "  0.1054" "265.9697" "  5.3287" 
Practical Range with cor=0.05 for asymptotic range: 15.96332

likfit: maximised log-likelihood = -71.58
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-729.2916" "   0.0400" "   0.2176" "  32.1133" "   0.8314" " 151.2130" 
        phi 
"   1.1469" 
Practical Range with cor=0.05 for asymptotic range: 3.435716

likfit: maximised log-likelihood = -66.78
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"428.2474" " -0.0150" " -0.1072" " -8.4957" " -0.2261" "174.3350" "  0.2992" 
Practical Range with cor=0.05 for asymptotic range: 0.8963098

likfit: maximised log-likelihood = -67.99
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"474.6224" "  0.1191" " -0.1534" "-18.9463" " -0.4711" " 83.8818" "  0.6058" 
Practical Range with cor=0.05 for asymptotic range: 1.814716

likfit: maximised log-likelihood = -61.77
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"228.2241" "  0.0386" " -0.0230" " 16.3079" "  0.4594" "119.5018" "  0.5133" 
Practical Range with cor=0.05 for asymptotic range: 1.537816

likfit: maximised log-likelihood = -64.78
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"290.1064" " -0.0223" " -0.0598" " -0.1717" " -0.0132" " 94.4041" "  0.5132" 
Practical Range with cor=0.05 for asymptotic range: 1.537403

likfit: maximised log-likelihood = -62.78
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"473.7026" "  0.0289" " -0.1005" "  2.4064" "  0.0713" " 70.0872" "  7.0888" 
Practical Range with cor=0.05 for asymptotic range: 21.23609

likfit: maximised log-likelihood = -60.22
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-144.9606" "  -0.0311" "   0.0319" "  -1.3138" "  -0.0383" "  70.8253" 
        phi 
"   0.5784" 
Practical Range with cor=0.05 for asymptotic range: 1.732678

likfit: maximised log-likelihood = -60.33
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 4.0836" "-0.0005" "-0.0007" " 0.0652" " 0.0017" " 0.0200" " 0.5416" 
Practical Range with cor=0.05 for asymptotic range: 1.622579

likfit: maximised log-likelihood = 9.131
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9992811
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  9 12  9  7  6 10  5 14  7 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  5  6  5 12  8  9 13 15 12  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 14  5  9 16  8  8  4  8  7 14

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 15 11 13 10  6 11 10  3  3  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 13  6  9 12  9  6  8  6  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 12 10  2 11  8  6 11  5  7 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  8  4 12  9  8 13 11 12 10  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 12  9 10  8  5 12  9  2 13 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  6  8 12  9  7 13 12  9  8  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 18 12  8  8 10  8  7  7  7  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 14 10  8  8  5 11 10  8  8  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  7  7 18  8  3  5  8  8 16 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 13  8 10  8  4  9  9  7  9 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5 13  7  8  5 13  9  9  9 15  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 11 13 12  6  6  6  9  9 10  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 15  5 14  7  6  5  8  4 13  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10384438"
[1] "variance explained"
[1] 0.9833101
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"4584.0099" "  -0.2443" "  -1.0400" "  -4.0016" "  -0.1283" "3224.1223" 
        phi 
"   0.0795" 
Practical Range with cor=0.05 for asymptotic range: 0.2380724

likfit: maximised log-likelihood = -92.79
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5878.1511" "   -0.2562" "    1.4091" "   70.3534" "    2.0731" "  450.8898" 
         phi 
"   10.6757" 
Practical Range with cor=0.05 for asymptotic range: 31.98146

likfit: maximised log-likelihood = -75.74
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-2580.7012" "    0.3044" "    0.4508" "  -42.9984" "   -1.2701" " 1079.2818" 
         phi 
"    0.1349" 
Practical Range with cor=0.05 for asymptotic range: 0.4042269

likfit: maximised log-likelihood = -83.49
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"884.5726" "  0.5483" " -0.1694" " 34.3704" "  0.8449" "265.8347" "  6.0783" 
Practical Range with cor=0.05 for asymptotic range: 18.20884

likfit: maximised log-likelihood = -71.51
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1502.0393" "   -0.1073" "    0.3493" "    3.2732" "   -0.0267" "  292.5686" 
         phi 
"    0.2157" 
Practical Range with cor=0.05 for asymptotic range: 0.6461803

likfit: maximised log-likelihood = -72.39
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-45.2876" "  0.0018" "  0.0083" " -0.6380" " -0.0168" "  0.7614" "  0.1253" 
Practical Range with cor=0.05 for asymptotic range: 0.3753988

likfit: maximised log-likelihood = -21.8
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9833101
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 12 14 12  9  9  8  9  6  5  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  8 12 12  7  7  7  9  9  8 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  9 10 16  6  8  9  8 11  3  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 12 12  8  6  8  8  9  5  6 17

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 10  9 12  6  8 10 11  6  7  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 10 12  8 11  7  6 10  9 10  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.994846
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6846.2584" "  -0.3139" "  -1.5433" " -14.6391" "  -0.3780" "1536.6539" 
        phi 
"   0.1325" 
Practical Range with cor=0.05 for asymptotic range: 0.3970745

likfit: maximised log-likelihood = -86.49
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5723.0818" "   -0.2496" "    1.3739" "   69.6430" "    2.0522" "  535.0270" 
         phi 
"    7.4659" 
Practical Range with cor=0.05 for asymptotic range: 22.36574

likfit: maximised log-likelihood = -77.4
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3394.6227" "    0.3277" "    0.6320" "  -39.2045" "   -1.1809" "  768.8657" 
         phi 
"    0.1023" 
Practical Range with cor=0.05 for asymptotic range: 0.3064432

likfit: maximised log-likelihood = -80.6
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"689.5115" "  0.5540" " -0.1282" " 34.2362" "  0.8397" "250.5125" "  6.9085" 
Practical Range with cor=0.05 for asymptotic range: 20.69597

likfit: maximised log-likelihood = -70.97
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1536.7347" "   -0.1065" "    0.3565" "    3.1456" "   -0.0308" "  289.1123" 
         phi 
"    0.1615" 
Practical Range with cor=0.05 for asymptotic range: 0.4839401

likfit: maximised log-likelihood = -72.29
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"857.4724" "  0.1073" " -0.1640" " 13.9626" "  0.3312" "345.9579" "  0.1499" 
Practical Range with cor=0.05 for asymptotic range: 0.4491288

likfit: maximised log-likelihood = -73.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"558.1139" " -0.1225" " -0.1001" "  5.1359" "  0.1619" "262.5137" "  0.1356" 
Practical Range with cor=0.05 for asymptotic range: 0.4063309

likfit: maximised log-likelihood = -71.47
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-96.7089" " -0.0384" "  0.0358" "  4.7240" "  0.0999" "262.0575" "  0.1338" 
Practical Range with cor=0.05 for asymptotic range: 0.4008086

likfit: maximised log-likelihood = -71.45
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"415.0500" " -0.0870" " -0.1503" "-33.3187" " -0.8395" "174.6245" "  4.0812" 
Practical Range with cor=0.05 for asymptotic range: 12.22622

likfit: maximised log-likelihood = -67.98
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-291.9669" "   0.0543" "   0.0952" "  18.6203" "   0.4826" " 165.7811" 
        phi 
"   3.0976" 
Practical Range with cor=0.05 for asymptotic range: 9.279674

likfit: maximised log-likelihood = -67.56
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 3.3432" " 0.0003" "-0.0025" "-0.8715" "-0.0223" " 0.2457" " 3.0314" 
Practical Range with cor=0.05 for asymptotic range: 9.08135

likfit: maximised log-likelihood = -12.18
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.994846
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 26  6  7 10  7  5  7 12  8  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5 10  7 11 14  9 12  5  7  8 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  7 11 16  7  8 10  6  7  5 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 10  7 14  8 13  6  7 12  4  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 12 11  9  9 11 11  8  8  6  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 16 10 10  7  7 11  7  8  6  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 33 13  5  8  9  8  9  4  3  1  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 15 12  8  7 11  6 14  5 10  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 11 11  9 11 11  4  6 10  7  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  9 14 16  7  8  4 10 11  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16  9 12 11  4  7  8  7  5  8 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9992883
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6775.8242" "  -0.3334" "  -1.4351" "  29.8296" "   0.7598" " 779.4497" 
        phi 
"   0.2199" 
Practical Range with cor=0.05 for asymptotic range: 0.6587125

likfit: maximised log-likelihood = -80.72
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5640.3790" "   -0.2576" "    1.3663" "   74.2909" "    2.1731" "  513.0085" 
         phi 
"    8.8078" 
Practical Range with cor=0.05 for asymptotic range: 26.38569

likfit: maximised log-likelihood = -76.97
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3362.2419" "    0.3354" "    0.5916" "  -55.1398" "   -1.5884" "  614.1561" 
         phi 
"    0.1015" 
Practical Range with cor=0.05 for asymptotic range: 0.3040979

likfit: maximised log-likelihood = -78.69
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"679.1669" "  0.5526" " -0.1326" " 30.9454" "  0.7562" "252.8409" "  6.2423" 
Practical Range with cor=0.05 for asymptotic range: 18.70029

likfit: maximised log-likelihood = -71.08
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1535.8033" "   -0.1065" "    0.3543" "    2.1968" "   -0.0552" "  291.5445" 
         phi 
"    0.1066" 
Practical Range with cor=0.05 for asymptotic range: 0.3192654

likfit: maximised log-likelihood = -72.36
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"853.6405" "  0.1052" " -0.1582" " 16.2757" "  0.3899" "338.7094" "  0.1491" 
Practical Range with cor=0.05 for asymptotic range: 0.4465348

likfit: maximised log-likelihood = -73.64
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"551.5009" " -0.1235" " -0.0924" "  8.1752" "  0.2401" "256.7425" "  0.1347" 
Practical Range with cor=0.05 for asymptotic range: 0.4036311

likfit: maximised log-likelihood = -71.28
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-96.9774" " -0.0363" "  0.0308" "  2.3493" "  0.0392" "263.7544" "  0.1336" 
Practical Range with cor=0.05 for asymptotic range: 0.4003065

likfit: maximised log-likelihood = -71.51
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"409.5846" " -0.0890" " -0.1475" "-32.6641" " -0.8236" "177.4172" "  4.0899" 
Practical Range with cor=0.05 for asymptotic range: 12.25232

likfit: maximised log-likelihood = -68.12
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-280.1673" "   0.0561" "   0.0885" "  16.7032" "   0.4340" " 167.4168" 
        phi 
"   3.0319" 
Practical Range with cor=0.05 for asymptotic range: 9.082843

likfit: maximised log-likelihood = -67.64
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-365.0605" "  -0.1002" "   0.1250" "  16.9529" "   0.4101" "  91.9651" 
        phi 
"   2.5976" 
Practical Range with cor=0.05 for asymptotic range: 7.781695

likfit: maximised log-likelihood = -62.55
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-276.2453" "  -0.0613" "   0.0251" " -20.9418" "  -0.5682" " 114.4431" 
        phi 
"   0.1044" 
Practical Range with cor=0.05 for asymptotic range: 0.3126579

likfit: maximised log-likelihood = -64.41
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-238.4249" "   0.0217" "   0.0475" "  -0.5086" "  -0.0055" "  94.3324" 
        phi 
"   3.0595" 
Practical Range with cor=0.05 for asymptotic range: 9.165423

likfit: maximised log-likelihood = -62.76
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"553.5576" "  0.0423" " -0.1202" "  1.8927" "  0.0602" " 68.5454" "  7.5750" 
Practical Range with cor=0.05 for asymptotic range: 22.69265

likfit: maximised log-likelihood = -59.93
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"103.3247" " -0.0298" " -0.0233" " -1.9340" " -0.0492" " 69.7815" "  0.1834" 
Practical Range with cor=0.05 for asymptotic range: 0.5494611

likfit: maximised log-likelihood = -60.21
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 1.4063" "-0.0001" "-0.0001" " 0.0826" " 0.0021" " 0.0073" " 0.1675" 
Practical Range with cor=0.05 for asymptotic range: 0.5016397

likfit: maximised log-likelihood = 17.7
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9992883
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 21 10 11  7  7  9  6  6 10  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 12  8  9  7 10 10 11  8  4  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  9 11 11  6 14 13 11  2  5  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 13  6  8 10  8  5 12 11  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 14 12  7  7  9  6  9  9  4 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 10 13  7 14  8  7  5  7 11  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20 15 14 11  6  8  6  7  5  4  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18 10  9 10  8  8 12  5  6 10  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17  8  8 11  9 12  7  8  5  6  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  7  8  6 10 11 14  8  6 11 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 11  6  8  8  8  9  8 13  5 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  3 11 10 11 11  9  9  8 15 12  1

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  8 12  6 10  8  7  5 14 11 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 13  6  3  7 15 13  9  5  4 14

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 13  9  8  5 11 10  8 10  8  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 11  8 17 10  6  4 11  7  9  2

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10384439"
[1] "variance explained"
[1] 0.9836148
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6014.8467" "  -0.1463" "  -1.3229" "  13.4084" "   0.3290" "2143.8547" 
        phi 
"   0.2147" 
Practical Range with cor=0.05 for asymptotic range: 0.6431628

likfit: maximised log-likelihood = -89.32
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-6017.6368" "   -0.4224" "    1.4388" "   62.0334" "    1.8639" "  535.6929" 
         phi 
"   10.5229" 
Practical Range with cor=0.05 for asymptotic range: 31.52373

likfit: maximised log-likelihood = -77.22
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3490.2063" "    0.3595" "    0.6937" "  -15.4933" "   -0.5237" " 1014.5806" 
         phi 
"    0.1866" 
Practical Range with cor=0.05 for asymptotic range: 0.5590921

likfit: maximised log-likelihood = -82.96
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-662.2521" "   0.1824" "   0.0736" " -28.2625" "  -0.8021" " 574.2189" 
        phi 
"   5.2003" 
Practical Range with cor=0.05 for asymptotic range: 15.57882

likfit: maximised log-likelihood = -78.08
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"939.2178" "  0.2761" " -0.1460" " 41.2060" "  1.0709" "286.0162" "  0.2117" 
Practical Range with cor=0.05 for asymptotic range: 0.6341558

likfit: maximised log-likelihood = -72.2
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-31.6588" "  0.0042" "  0.0067" "  0.1270" "  0.0024" "  0.5809" " 13.5791" 
Practical Range with cor=0.05 for asymptotic range: 40.67931

likfit: maximised log-likelihood = -18.89
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9836148
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 13 14  3 11  8  3 10 14  6  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  7 16  8  8  8  5 19 10  6  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 12 11 10  7  7  4  2 12 13  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6 11 10  9  5 11 17 10  4 10  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 14 13  9  8  8  6  9  7  5 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  9  5 11  8  9  8  6 10 10 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9949415
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"7650.8472" "  -0.3607" "  -1.7057" " -10.4095" "  -0.2416" "1096.3618" 
        phi 
"   0.2244" 
Practical Range with cor=0.05 for asymptotic range: 0.6722014

likfit: maximised log-likelihood = -83.62
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5787.7106" "   -0.4494" "    1.3835" "   57.9768" "    1.7631" "  551.1137" 
         phi 
"    9.0798" 
Practical Range with cor=0.05 for asymptotic range: 27.20073

likfit: maximised log-likelihood = -77.56
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3999.7935" "    0.4256" "    0.8134" "   -7.8964" "   -0.3409" "  732.6600" 
         phi 
"    0.1017" 
Practical Range with cor=0.05 for asymptotic range: 0.3047146

likfit: maximised log-likelihood = -80.19
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-969.8330" "   0.2160" "   0.1460" " -23.8151" "  -0.6942" " 520.4994" 
        phi 
"   4.8819" 
Practical Range with cor=0.05 for asymptotic range: 14.62477

likfit: maximised log-likelihood = -77.25
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1044.8986" "   0.2621" "  -0.1709" "  39.6215" "   1.0335" " 300.8279" 
        phi 
"   0.1558" 
Practical Range with cor=0.05 for asymptotic range: 0.4667605

likfit: maximised log-likelihood = -72.63
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-739.2552" "  -0.0990" "   0.1495" " -13.0954" "  -0.4277" " 271.6929" 
        phi 
"   0.1993" 
Practical Range with cor=0.05 for asymptotic range: 0.5970063

likfit: maximised log-likelihood = -71.76
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"649.8306" "  0.1420" " -0.1629" " -3.2360" " -0.0515" "280.9183" "  0.1936" 
Practical Range with cor=0.05 for asymptotic range: 0.5798944

likfit: maximised log-likelihood = -72.05
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"358.3985" " -0.1025" " -0.0581" "  4.5992" "  0.1231" "246.3050" "  0.1615" 
Practical Range with cor=0.05 for asymptotic range: 0.4837991

likfit: maximised log-likelihood = -70.93
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"772.5076" " -0.0241" " -0.2202" "-27.2734" " -0.6895" "212.1729" " 11.6557" 
Practical Range with cor=0.05 for asymptotic range: 34.91726

likfit: maximised log-likelihood = -69.24
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-313.7491" "   0.1215" "   0.0666" "   5.3193" "   0.1349" " 149.7376" 
        phi 
"   0.1349" 
Practical Range with cor=0.05 for asymptotic range: 0.4040185

likfit: maximised log-likelihood = -66.7
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"14.0472" "-0.0006" "-0.0044" "-0.6777" "-0.0172" " 0.1965" " 0.1023" 
Practical Range with cor=0.05 for asymptotic range: 0.3064267

likfit: maximised log-likelihood = -10.29
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9949415
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  8 13  8  8 11  9 11  8  8  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 16  6 10  8  6  7  8  8 10  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 11
phi       20 25 30 35 40 45 50 55 60 70
tausq.rel  0  0  0  0  0  0  0  0  0  0
frequency 10 19 11  6 12 16  9  7  2  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  10 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  6  8 12  9  8  6  9 13  9 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  9  9  7  8  6 10  9 11  7  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 11  7 10  7 12  5 10  5 13 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 11 15 12  9  6  8  5  9  2  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 13 11  9  9  5  5 13  6  6  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5  6  9  7  9  9  7 12 14  7 15

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 11 11 12 11  3  5 10  6  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 10 13  9  6  8  6  5 14  5 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9992423
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6934.9012" "  -0.3564" "  -1.4802" "  24.3685" "   0.6383" " 805.6862" 
        phi 
"   0.1371" 
Practical Range with cor=0.05 for asymptotic range: 0.4107655

likfit: maximised log-likelihood = -81
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5816.9901" "   -0.4546" "    1.3979" "   61.7560" "    1.8608" "  523.3381" 
         phi 
"   10.6605" 
Practical Range with cor=0.05 for asymptotic range: 31.93587

likfit: maximised log-likelihood = -77.01
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3771.1214" "    0.4248" "    0.7423" "  -18.4876" "   -0.6086" "  735.7400" 
         phi 
"    0.1006" 
Practical Range with cor=0.05 for asymptotic range: 0.3014978

likfit: maximised log-likelihood = -80.23
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-838.6308" "   0.2162" "   0.1054" " -29.7972" "  -0.8454" " 501.3019" 
        phi 
"   4.9177" 
Practical Range with cor=0.05 for asymptotic range: 14.73205

likfit: maximised log-likelihood = -76.93
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1008.6357" "   0.2621" "  -0.1589" "  41.6732" "   1.0854" " 286.5719" 
        phi 
"   0.1999" 
Practical Range with cor=0.05 for asymptotic range: 0.5988893

likfit: maximised log-likelihood = -72.21
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-725.7627" "  -0.0989" "   0.1443" " -14.2202" "  -0.4570" " 271.3631" 
        phi 
"   0.2103" 
Practical Range with cor=0.05 for asymptotic range: 0.6300342

likfit: maximised log-likelihood = -71.75
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"635.0260" "  0.1400" " -0.1583" " -2.6743" " -0.0377" "282.7249" "  0.1266" 
Practical Range with cor=0.05 for asymptotic range: 0.3793444

likfit: maximised log-likelihood = -72.1
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"313.5132" " -0.1019" " -0.0436" "  6.9859" "  0.1841" "243.2608" "  0.1616" 
Practical Range with cor=0.05 for asymptotic range: 0.4840357

likfit: maximised log-likelihood = -70.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"765.1826" " -0.0290" " -0.2175" "-26.9894" " -0.6829" "224.4038" " 13.9348" 
Practical Range with cor=0.05 for asymptotic range: 41.7448

likfit: maximised log-likelihood = -69.48
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-271.2230" "   0.1224" "   0.0553" "   4.3114" "   0.1101" " 150.3556" 
        phi 
"   0.1367" 
Practical Range with cor=0.05 for asymptotic range: 0.4093887

likfit: maximised log-likelihood = -66.73
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"850.4726" "  0.1200" " -0.1991" "  0.0889" "  0.0570" " 91.9848" "  2.5505" 
Practical Range with cor=0.05 for asymptotic range: 7.640544

likfit: maximised log-likelihood = -62.55
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"431.3363" "  0.0250" " -0.1476" "-25.7050" " -0.6608" " 78.8809" "  0.0980" 
Practical Range with cor=0.05 for asymptotic range: 0.2934844

likfit: maximised log-likelihood = -61.25
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-198.0703" "   0.0356" "   0.0394" "   0.5051" "   0.0215" "  94.4315" 
        phi 
"   2.7278" 
Practical Range with cor=0.05 for asymptotic range: 8.171678

likfit: maximised log-likelihood = -62.77
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-651.3245" "  -0.0469" "   0.1413" "  -2.3839" "  -0.0790" "  67.0321" 
        phi 
"   9.1841" 
Practical Range with cor=0.05 for asymptotic range: 27.51295

likfit: maximised log-likelihood = -59.65
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-31.6325" "  0.0338" "  0.0065" "  1.5860" "  0.0430" " 69.4184" "  0.1741" 
Practical Range with cor=0.05 for asymptotic range: 0.5214368

likfit: maximised log-likelihood = -60.16
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"-1.1927" "-0.0005" " 0.0004" " 0.0618" " 0.0015" " 0.0154" " 0.1024" 
Practical Range with cor=0.05 for asymptotic range: 0.3068637

likfit: maximised log-likelihood = 11.33
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9992423
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 17  7  8 10  6  7  9  8 15  2

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 17  9 10  7  5  6  8 12  5 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20  4  9  9 17  8  8  8  4  5  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  9  9  9  7 18  8  9  5  5  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 11 14  4 12  6  7  8 10 10  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 11 13  7 10  6 10 11  6  9  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 13 12  8  6  6 12  6  5 13  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18  9  7 11  6  8  8  7  6  4 16

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  3  6 10  7 10  5  9 13  7 22

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 15 12 10  7  5  8  4 12  5  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  6 12 10  6  8 13  6  5 13  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5 10  9  8 15  6 11 13 10  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 12 10 10 11  4  6  5  6 12 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  8 11 10  8 11  4  5  9 11 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 15  8  7  9  6 12  9  8 11  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 10  7 10  9  8 13  7  6 10  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10384443"
[1] "variance explained"
[1] 0.9838117
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"4018.2275" "  -0.4710" "  -0.9836" " -43.8954" "  -1.0954" "1965.5020" 
        phi 
"   0.1771" 
Practical Range with cor=0.05 for asymptotic range: 0.530662

likfit: maximised log-likelihood = -88.58
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5789.3989" "   -0.5588" "    1.3569" "   42.9870" "    1.4470" "  418.1991" 
         phi 
"   21.4859" 
Practical Range with cor=0.05 for asymptotic range: 64.36598

likfit: maximised log-likelihood = -73.75
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-2637.8550" "    0.5485" "    0.5783" "   26.1621" "    0.5325" "  496.4590" 
         phi 
"    0.1323" 
Practical Range with cor=0.05 for asymptotic range: 0.3962439

likfit: maximised log-likelihood = -76.89
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1435.5641" "   0.0594" "  -0.2248" "  47.2934" "   1.2974" " 512.6169" 
        phi 
"   3.2970" 
Practical Range with cor=0.05 for asymptotic range: 9.876962

likfit: maximised log-likelihood = -77.15
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1279.2130" "   -0.2496" "    0.3171" "    4.9364" "    0.0321" "  251.2160" 
         phi 
"    0.2435" 
Practical Range with cor=0.05 for asymptotic range: 0.7294675

likfit: maximised log-likelihood = -71.1
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-54.3198" " -0.0005" "  0.0104" " -0.6474" " -0.0163" "  0.6775" "  9.3301" 
Practical Range with cor=0.05 for asymptotic range: 27.9505

likfit: maximised log-likelihood = -20.58
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9838117
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 15 12  3  9 10 10  6 12  5  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  9 13  7 16  6  7  8  7 13  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19 12 13 12 10  7  4  9  7  5  2

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 11 11  9 12 10  7  5  9  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  8 10  9  8  7  9 11 11  8 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 10 12  9 17  8  4  6  7  6 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9950067
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6086.3365" "  -0.5208" "  -1.4030" " -34.1337" "  -0.8471" " 842.8959" 
        phi 
"   0.1554" 
Practical Range with cor=0.05 for asymptotic range: 0.4654311

likfit: maximised log-likelihood = -81.39
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5415.6195" "   -0.5199" "    1.2743" "   43.1215" "    1.4376" "  499.1012" 
         phi 
"   12.8805" 
Practical Range with cor=0.05 for asymptotic range: 38.58658

likfit: maximised log-likelihood = -76.38
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3260.4484" "    0.5640" "    0.7054" "   23.6438" "    0.4684" "  272.9779" 
         phi 
"    0.1342" 
Practical Range with cor=0.05 for asymptotic range: 0.4020702

likfit: maximised log-likelihood = -71.8
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1797.7767" "   0.0532" "  -0.3007" "  47.8621" "   1.3109" " 460.4250" 
        phi 
"   0.1066" 
Practical Range with cor=0.05 for asymptotic range: 0.3194546

likfit: maximised log-likelihood = -76.25
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1268.0160" "   -0.2523" "    0.3158" "    5.4097" "    0.0451" "  249.8663" 
         phi 
"    3.7780" 
Practical Range with cor=0.05 for asymptotic range: 11.31791

likfit: maximised log-likelihood = -71.03
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1051.8107" "   0.0914" "  -0.2159" "   8.4802" "   0.2000" " 354.0672" 
        phi 
"   5.0621" 
Practical Range with cor=0.05 for asymptotic range: 15.16457

likfit: maximised log-likelihood = -73.97
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-593.3889" "  -0.1028" "   0.1720" "  16.6768" "   0.4239" " 268.4660" 
        phi 
"   0.2083" 
Practical Range with cor=0.05 for asymptotic range: 0.6240982

likfit: maximised log-likelihood = -71.66
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"315.3962" " -0.0671" " -0.0366" " 12.9580" "  0.3553" "259.4719" "  0.1593" 
Practical Range with cor=0.05 for asymptotic range: 0.477125

likfit: maximised log-likelihood = -71.37
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"579.9227" " -0.0242" " -0.1310" " -4.3703" " -0.1161" "216.1115" "  0.1365" 
Practical Range with cor=0.05 for asymptotic range: 0.4088064

likfit: maximised log-likelihood = -69.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"  5.7082" " -0.1607" "  0.0023" " -6.4596" " -0.1788" "129.9840" "  0.1323" 
Practical Range with cor=0.05 for asymptotic range: 0.3964076

likfit: maximised log-likelihood = -65.49
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 4.1717" "-0.0017" "-0.0023" "-0.7772" "-0.0198" " 0.1919" " 0.1652" 
Practical Range with cor=0.05 for asymptotic range: 0.4949437

likfit: maximised log-likelihood = -10.09
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9950067
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 12  7  7  7 11  7  7  9  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  4  8  8  4  9  9 10 13 13 14  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 15 12 10  5 11 11  9  8  2  2

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  6  3  7 13  9 12  4 13 11 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5 14  5  9 10 13  6 10  7  8 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 13  8 12 13  7 11 10  4  9  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  5 10  6 12 11  7 10  8 10 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20 17 10 11  7  7  8  3  5  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 10 12  9  7 10 15  5 11  8  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 11  8 10  5 11  9  7  7  8  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 16 13 11  7  8  3  4 10  7  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9992932
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"5918.6752" "  -0.4494" "  -1.2965" "   3.2543" "   0.1013" " 636.8350" 
        phi 
"   0.2159" 
Practical Range with cor=0.05 for asymptotic range: 0.6469258

likfit: maximised log-likelihood = -79
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5292.2073" "   -0.5526" "    1.2546" "   45.3735" "    1.5059" "  514.6736" 
         phi 
"   19.2899" 
Practical Range with cor=0.05 for asymptotic range: 57.78739

likfit: maximised log-likelihood = -75.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3202.1551" "    0.5427" "    0.6719" "   12.4980" "    0.1858" "  329.4248" 
         phi 
"    0.1332" 
Practical Range with cor=0.05 for asymptotic range: 0.3990541

likfit: maximised log-likelihood = -73.4
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1773.8609" "   0.0631" "  -0.2849" "  53.4952" "   1.4534" " 425.1053" 
        phi 
"   0.1863" 
Practical Range with cor=0.05 for asymptotic range: 0.5582527

likfit: maximised log-likelihood = -75.57
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1232.1015" "   -0.2492" "    0.3081" "    5.5010" "    0.0459" "  247.7169" 
         phi 
"    0.2071" 
Practical Range with cor=0.05 for asymptotic range: 0.6204526

likfit: maximised log-likelihood = -70.98
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1069.9756" "   0.0958" "  -0.2171" "  10.0141" "   0.2387" " 346.3982" 
        phi 
"   5.4144" 
Practical Range with cor=0.05 for asymptotic range: 16.22002

likfit: maximised log-likelihood = -73.78
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-589.6336" "  -0.1036" "   0.1692" "  15.7378" "   0.4008" " 270.6626" 
        phi 
"   0.2124" 
Practical Range with cor=0.05 for asymptotic range: 0.6363476

likfit: maximised log-likelihood = -71.73
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"306.6440" " -0.0628" " -0.0291" " 15.9209" "  0.4315" "254.2285" "  0.1587" 
Practical Range with cor=0.05 for asymptotic range: 0.4755667

likfit: maximised log-likelihood = -71.2
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"572.2871" " -0.0222" " -0.1293" " -4.2382" " -0.1126" "216.4220" "  0.1573" 
Practical Range with cor=0.05 for asymptotic range: 0.4713259

likfit: maximised log-likelihood = -69.83
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-13.5737" " -0.1587" "  0.0091" " -5.0913" " -0.1444" "130.1259" "  0.1340" 
Practical Range with cor=0.05 for asymptotic range: 0.4013401

likfit: maximised log-likelihood = -65.5
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-271.7923" "  -0.0382" "   0.0382" " -13.0134" "  -0.3654" " 141.8299" 
        phi 
"   0.1840" 
Practical Range with cor=0.05 for asymptotic range: 0.5513601

likfit: maximised log-likelihood = -66.24
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-179.9462" "   0.0034" "   0.0967" "  28.3943" "   0.7246" "  72.5756" 
        phi 
"   0.1582" 
Practical Range with cor=0.05 for asymptotic range: 0.474076

likfit: maximised log-likelihood = -60.54
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-272.8809" "   0.0242" "   0.0551" "  -0.2017" "   0.0047" "  93.5118" 
        phi 
"   3.0840" 
Practical Range with cor=0.05 for asymptotic range: 9.238764

likfit: maximised log-likelihood = -62.69
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-601.3373" "  -0.0384" "   0.1268" "  -3.5896" "  -0.1061" "  67.7945" 
        phi 
"   9.5992" 
Practical Range with cor=0.05 for asymptotic range: 28.75662

likfit: maximised log-likelihood = -59.71
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-66.6082" "  0.0310" "  0.0153" "  1.9475" "  0.0490" " 69.6164" "  0.1760" 
Practical Range with cor=0.05 for asymptotic range: 0.527367

likfit: maximised log-likelihood = -60.19
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 0.6071" "-0.0002" "-0.0001" " 0.0159" " 0.0003" " 0.0071" " 0.1696" 
Practical Range with cor=0.05 for asymptotic range: 0.5082015

likfit: maximised log-likelihood = 17.9
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9992932
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 12 19  3  5  3 19  5  6 10  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  3  5 10  8 12  8 10  8 12 13 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 11 17 10 12  9 10  7  2  5  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  7  6  4 13  7 14  2 16 11 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  9 13  5 11 11  8 10  8  9  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 11  7  9 15  8 11  6  9  6  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 10  9 13  6  7 10 12  7 11  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 12 11  5  9 10  5  8  9  8  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  8  6 10 14 10  9  7  8  5 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 11 12 11  9 12 11  7  4  4  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 10 10  7 12  6  7 10 15  8  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  9 16  8 13  9 10  6  8  4  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 12  6  5  9  7  7  6 12  8 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 13 11  8  7  5  7 12  8  7  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 13 15  8  4  9  9 13  8  6  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 14  8  7  9 15 10  7  6  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10384445"
[1] "variance explained"
[1] 0.98407
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"4661.1024" "  -0.2487" "  -0.9813" "  33.2178" "   0.8320" "2149.9308" 
        phi 
"   5.5946" 
Practical Range with cor=0.05 for asymptotic range: 16.75982

likfit: maximised log-likelihood = -89.34
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4221.7202" "   -0.5057" "    1.0437" "   55.2759" "    1.7240" "  645.5630" 
         phi 
"    6.6236" 
Practical Range with cor=0.05 for asymptotic range: 19.84241

likfit: maximised log-likelihood = -79.1
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"4431.6109" "  -0.1753" "  -0.9073" "  15.5050" "   0.4488" " 791.2344" 
        phi 
"   3.0874" 
Practical Range with cor=0.05 for asymptotic range: 9.248999

likfit: maximised log-likelihood = -80.85
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1236.0724" "  -0.0914" "  -0.1854" "  38.5899" "   1.0772" " 547.1588" 
        phi 
"   0.6302" 
Practical Range with cor=0.05 for asymptotic range: 1.887892

likfit: maximised log-likelihood = -77.71
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1111.2862" "   0.3726" "  -0.2667" "   7.3571" "   0.2690" " 228.2680" 
        phi 
"   0.5976" 
Practical Range with cor=0.05 for asymptotic range: 1.790177

likfit: maximised log-likelihood = -70.28
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-43.2661" "  0.0029" "  0.0097" "  0.2886" "  0.0062" "  0.6160" " 17.2253" 
Practical Range with cor=0.05 for asymptotic range: 51.60239

likfit: maximised log-likelihood = -19.22
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.98407
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 11  6  8 11  7  5  4  9 18 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 10  8  9 12  6  8  9  8 11 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 16 12 12 12  6  4  9  7  6  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 12 13 11  9  8  9  6  8  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 14  6  9 15  7  6  6 10  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6  9  4 10 11  4 11 10 15 12  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9950366
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"7089.9715" "  -0.4045" "  -1.5859" " -13.9665" "  -0.3560" "1157.9939" 
        phi 
"   0.6618" 
Practical Range with cor=0.05 for asymptotic range: 1.982542

likfit: maximised log-likelihood = -84.08
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3629.9171" "   -0.5425" "    0.8959" "   43.5640" "    1.4281" "  580.9680" 
         phi 
"    6.2443" 
Practical Range with cor=0.05 for asymptotic range: 18.70636

likfit: maximised log-likelihood = -78.21
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"4990.2606" "  -0.2109" "  -1.0466" "   4.5153" "   0.1715" " 636.0664" 
        phi 
"   2.0964" 
Practical Range with cor=0.05 for asymptotic range: 6.280299

likfit: maximised log-likelihood = -78.99
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1647.6556" "  -0.1147" "  -0.2880" "  30.6892" "   0.8783" " 506.1876" 
        phi 
"   0.6600" 
Practical Range with cor=0.05 for asymptotic range: 1.977282

likfit: maximised log-likelihood = -77.05
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1002.5690" "   0.3798" "  -0.2396" "   9.5549" "   0.3252" " 224.4770" 
        phi 
"   0.5786" 
Practical Range with cor=0.05 for asymptotic range: 1.733263

likfit: maximised log-likelihood = -70.14
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-132.4823" "   0.1709" "   0.0370" "  10.5823" "   0.2258" " 322.4580" 
        phi 
"   5.1009" 
Practical Range with cor=0.05 for asymptotic range: 15.28104

likfit: maximised log-likelihood = -73.22
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-580.7101" "   0.0454" "   0.1228" "   0.6081" "   0.0005" " 278.7024" 
        phi 
"   0.6658" 
Practical Range with cor=0.05 for asymptotic range: 1.994642

likfit: maximised log-likelihood = -71.98
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-403.5016" "  -0.0381" "   0.1128" "  10.0922" "   0.2366" " 256.8888" 
        phi 
"  11.4284" 
Practical Range with cor=0.05 for asymptotic range: 34.23633

likfit: maximised log-likelihood = -71.07
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1047.7330" "  -0.1050" "  -0.2753" " -30.0372" "  -0.7805" " 122.1600" 
        phi 
"   0.3542" 
Practical Range with cor=0.05 for asymptotic range: 1.061096

likfit: maximised log-likelihood = -64.97
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"117.4261" "  0.0834" " -0.0354" " -0.8754" " -0.0192" "167.0963" "  0.5230" 
Practical Range with cor=0.05 for asymptotic range: 1.566868

likfit: maximised log-likelihood = -67.63
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"20.7249" "-0.0010" "-0.0064" "-0.9880" "-0.0255" " 0.1794" " 0.8199" 
Practical Range with cor=0.05 for asymptotic range: 2.45617

likfit: maximised log-likelihood = -9.516
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9950366
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 19 13  6  8  6  8  6  8  9  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  8  5 18 11  9 10 11  9  5  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  5  8  7 11 13  6 11  8  7  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 11  9 15  7  6  7  8  5  8 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 17 11  8  9  9  7 10 12  5  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 11  7  8 11 12  8 10  8  6  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16  7  8 11  9 14  6  6  6 10  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  3  5 10  4  4  9  9 14 11 17 14

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 11  7  8  5 12  8 10 12 13  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 10 12 10  7 10  8  4  7 10  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 13  7 15  2 13  5  6 13  4  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9992891
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6174.9854" "  -0.3714" "  -1.2898" "  36.8880" "   0.9584" " 762.0479" 
        phi 
"   4.0217" 
Practical Range with cor=0.05 for asymptotic range: 12.04801

likfit: maximised log-likelihood = -80.53
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3865.1173" "   -0.5327" "    0.9693" "   55.3087" "    1.7307" "  570.2556" 
         phi 
"    5.5191" 
Practical Range with cor=0.05 for asymptotic range: 16.53387

likfit: maximised log-likelihood = -78.06
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"4771.3414" "  -0.2037" "  -0.9763" "  16.3960" "   0.4786" " 617.8226" 
        phi 
"   2.4429" 
Practical Range with cor=0.05 for asymptotic range: 7.318438

likfit: maximised log-likelihood = -78.74
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1479.5356" "  -0.1097" "  -0.2333" "  40.1293" "   1.1222" " 469.6999" 
        phi 
"   0.6156" 
Practical Range with cor=0.05 for asymptotic range: 1.844147

likfit: maximised log-likelihood = -76.41
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1046.7015" "   0.3777" "  -0.2532" "   7.3977" "   0.2695" " 221.7300" 
        phi 
"   0.5977" 
Practical Range with cor=0.05 for asymptotic range: 1.790524

likfit: maximised log-likelihood = -70.03
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-120.2067" "   0.1694" "   0.0343" "  10.4496" "   0.2220" " 321.9618" 
        phi 
"   5.3403" 
Practical Range with cor=0.05 for asymptotic range: 15.998

likfit: maximised log-likelihood = -73.2
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-524.0310" "   0.0443" "   0.1045" "  -2.4745" "  -0.0794" " 278.2313" 
        phi 
"   0.6218" 
Practical Range with cor=0.05 for asymptotic range: 1.862636

likfit: maximised log-likelihood = -71.96
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-393.7277" "  -0.0493" "   0.1091" "   8.7625" "   0.2029" " 266.8936" 
        phi 
"  15.2955" 
Practical Range with cor=0.05 for asymptotic range: 45.8211

likfit: maximised log-likelihood = -71.04
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"997.0637" " -0.1040" " -0.2603" "-27.9791" " -0.7279" "129.0509" "  0.6056" 
Practical Range with cor=0.05 for asymptotic range: 1.814205

likfit: maximised log-likelihood = -65.43
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"136.5625" "  0.0845" " -0.0404" " -1.2470" " -0.0285" "166.5677" "  0.5232" 
Practical Range with cor=0.05 for asymptotic range: 1.567445

likfit: maximised log-likelihood = -67.6
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"560.9697" "  0.0722" " -0.1272" "  1.8872" "  0.0903" "112.7380" "  0.5194" 
Practical Range with cor=0.05 for asymptotic range: 1.555956

likfit: maximised log-likelihood = -64.29
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"407.5704" " -0.0027" " -0.1554" "-34.4332" " -0.9121" " 84.2998" " 24.9446" 
Practical Range with cor=0.05 for asymptotic range: 74.72746

likfit: maximised log-likelihood = -60.01
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-325.9834" "   0.0323" "   0.0691" "   1.3660" "   0.0427" "  93.2922" 
        phi 
"   0.5960" 
Practical Range with cor=0.05 for asymptotic range: 1.78534

likfit: maximised log-likelihood = -62.68
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-559.0073" "  -0.0206" "   0.1258" "   1.4344" "   0.0286" "  68.5540" 
        phi 
"   6.8398" 
Practical Range with cor=0.05 for asymptotic range: 20.49014

likfit: maximised log-likelihood = -60.04
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-86.3506" " -0.0355" "  0.0120" " -5.1996" " -0.1403" " 70.2641" "  0.5840" 
Practical Range with cor=0.05 for asymptotic range: 1.749473

likfit: maximised log-likelihood = -60.27
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 1.4358" "-0.0003" "-0.0001" " 0.0957" " 0.0025" " 0.0120" " 0.5576" 
Practical Range with cor=0.05 for asymptotic range: 1.670323

likfit: maximised log-likelihood = 13.46
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9992891
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  7 13 11  6  9  7 11  9  7  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  9 12 11 11  3 10 12 11  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  7  8 12 13  8 12  6  9  6 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 11 12  7  6  6 12 11 11  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 13 11 11  8  5  8  5 13  9  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 14 11  9  3  4 14 10 10 11  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 11 11  8  7  7  8 14  8  5  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6  5 10 11  8  5  8 12 13 12 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 10 10 11 12  7  6 14  9  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  8  5 11 10 11  4 10 10  6 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 12 11  7  4 15 11 11  8  6  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  4  7  4  6  7 12  9 11  6 19 15

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 12 10  8 13  9  6 15  5  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6  7  7  7  8  9 11 15 11 12  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  9 11  8  8 12  6 15  4  3  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 14 12 12  7  5  7  3 12  4  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10384449"
[1] "variance explained"
[1] 0.9825775
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"5938.6100" "  -0.3332" "  -1.2583" "  28.6905" "   0.7425" "2187.8462" 
        phi 
"   0.0996" 
Practical Range with cor=0.05 for asymptotic range: 0.2983354

likfit: maximised log-likelihood = -89.49
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-5431.373" "   -0.305" "    1.285" "   55.359" "    1.726" "  514.405" 
        phi 
"    9.636" 
Practical Range with cor=0.05 for asymptotic range: 28.86745

likfit: maximised log-likelihood = -76.93
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3586.4522" "    0.3914" "    0.7009" "  -21.0069" "   -0.6796" "  954.4003" 
         phi 
"    0.1938" 
Practical Range with cor=0.05 for asymptotic range: 0.5805281

likfit: maximised log-likelihood = -82.44
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-600.6632" "   0.2550" "   0.0342" " -37.5364" "  -1.0403" " 540.9600" 
        phi 
"   5.7013" 
Practical Range with cor=0.05 for asymptotic range: 17.07952

likfit: maximised log-likelihood = -77.56
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1457.9083" "   -0.3498" "    0.2667" "  -41.7851" "   -1.1252" "  258.5902" 
         phi 
"    0.1570" 
Practical Range with cor=0.05 for asymptotic range: 0.4702963

likfit: maximised log-likelihood = -71.34
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-24.6950" "  0.0048" "  0.0051" "  0.1544" "  0.0042" "  0.6995" " 15.2253" 
Practical Range with cor=0.05 for asymptotic range: 45.61082

likfit: maximised log-likelihood = -20.26
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9825775
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  8 13  6  7 16  8  5  9  6  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5  9 11  6  6  9  9 10 12  8 15

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 12  7 12 10  7 10  9  9  6  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 13 17  5  5  9  9  8 12  4  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 22  8 12 10  3  6  9  5 11  9  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  4  8  4  9  7 15 11 11 12  9 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9946169
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6827.3891" "  -0.4918" "  -1.4553" "  17.6970" "   0.4498" "1209.8378" 
        phi 
"   0.1656" 
Practical Range with cor=0.05 for asymptotic range: 0.4961917

likfit: maximised log-likelihood = -84.46
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5285.9537" "   -0.3232" "    1.2499" "   52.6535" "    1.6531" "  545.7913" 
         phi 
"    8.5130" 
Practical Range with cor=0.05 for asymptotic range: 25.50279

likfit: maximised log-likelihood = -77.51
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3866.2058" "    0.4378" "    0.7639" "  -17.2400" "   -0.5797" "  746.4354" 
         phi 
"    0.1030" 
Practical Range with cor=0.05 for asymptotic range: 0.3086725

likfit: maximised log-likelihood = -80.35
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-796.8855" "   0.2818" "   0.0782" " -35.1830" "  -0.9769" " 493.5893" 
        phi 
"   5.4299" 
Practical Range with cor=0.05 for asymptotic range: 16.26668

likfit: maximised log-likelihood = -76.79
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1492.2926" "   -0.3422" "    0.2736" "  -41.6926" "   -1.1234" "  261.5147" 
         phi 
"    0.1529" 
Practical Range with cor=0.05 for asymptotic range: 0.4579804

likfit: maximised log-likelihood = -71.44
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"530.6110" "  0.0871" " -0.1444" " -7.2663" " -0.1047" "326.7414" "  4.7522" 
Practical Range with cor=0.05 for asymptotic range: 14.2363

likfit: maximised log-likelihood = -73.3
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"241.3956" "  0.1212" " -0.0917" "-13.9981" " -0.3682" "304.7247" "  0.1939" 
Practical Range with cor=0.05 for asymptotic range: 0.5809838

likfit: maximised log-likelihood = -72.74
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"508.0282" " -0.0585" " -0.0877" "  8.9278" "  0.2591" "263.9578" "  0.1626" 
Practical Range with cor=0.05 for asymptotic range: 0.4872551

likfit: maximised log-likelihood = -71.52
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-406.7514" "  -0.0396" "   0.1257" "  15.9879" "   0.3897" " 213.0356" 
        phi 
"   0.1970" 
Practical Range with cor=0.05 for asymptotic range: 0.5901016

likfit: maximised log-likelihood = -69.69
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-589.9481" "   0.0124" "   0.1906" "  31.9945" "   0.8271" " 115.6105" 
        phi 
"   0.1966" 
Practical Range with cor=0.05 for asymptotic range: 0.5888195

likfit: maximised log-likelihood = -64.5
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"10.0484" " 0.0009" "-0.0033" "-0.4876" "-0.0122" " 0.2102" " 2.4281" 
Practical Range with cor=0.05 for asymptotic range: 7.273986

likfit: maximised log-likelihood = -10.86
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9946169
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 13 10  7 12  9 11  5  7  5  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  9  9  9 15  6 15  5  8  9  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 15 11  8  5  5 11  9  7 12  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 12 11  8  4  5 10 11  7 12  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 13  8  5 13  9  7  8  6 10  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  8 14  5 12 10 10  9  9  9  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  8 10  8  8 15  8  5  4  5 15

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18  9  4 10 10  9  7 12 10  3  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6  9  6  7  9  9 10  5 14  8 17

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 10  8 15 11  3 13  7  6  5  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  8  9 14  9  9  7  9  9  9  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9992045
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6476.6701" "  -0.5402" "  -1.3276" "  40.4334" "   1.0199" " 696.7781" 
        phi 
"   0.1944" 
Practical Range with cor=0.05 for asymptotic range: 0.5822807

likfit: maximised log-likelihood = -79.77
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5291.9920" "   -0.3325" "    1.2571" "   55.0239" "    1.7128" "  539.6172" 
         phi 
"    9.2420" 
Practical Range with cor=0.05 for asymptotic range: 27.68648

likfit: maximised log-likelihood = -77.37
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3751.4796" "    0.4541" "    0.7231" "  -24.1830" "   -0.7536" "  718.0941" 
         phi 
"    0.1889" 
Practical Range with cor=0.05 for asymptotic range: 0.5658608

likfit: maximised log-likelihood = -80.02
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-744.1831" "   0.2870" "   0.0592" " -38.5551" "  -1.0608" " 472.8423" 
        phi 
"   5.1297" 
Practical Range with cor=0.05 for asymptotic range: 15.36733

likfit: maximised log-likelihood = -76.43
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1484.9286" "   -0.3404" "    0.2704" "  -42.3788" "   -1.1404" "  258.9169" 
         phi 
"    0.1457" 
Practical Range with cor=0.05 for asymptotic range: 0.4364542

likfit: maximised log-likelihood = -71.35
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"535.7939" "  0.0912" " -0.1476" " -8.0579" " -0.1243" "321.5551" "  4.8207" 
Practical Range with cor=0.05 for asymptotic range: 14.44161

likfit: maximised log-likelihood = -73.16
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"243.9884" "  0.1215" " -0.0931" "-14.4037" " -0.3790" "303.9934" "  0.1934" 
Practical Range with cor=0.05 for asymptotic range: 0.5794914

likfit: maximised log-likelihood = -72.72
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"482.7678" " -0.0623" " -0.0785" " 10.5240" "  0.2993" "261.4043" "  0.1584" 
Practical Range with cor=0.05 for asymptotic range: 0.4743933

likfit: maximised log-likelihood = -71.43
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-397.0787" "  -0.0347" "   0.1220" "  15.4721" "   0.3777" " 214.7919" 
        phi 
"   0.1659" 
Practical Range with cor=0.05 for asymptotic range: 0.4969089

likfit: maximised log-likelihood = -69.76
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-574.9048" "   0.0166" "   0.1856" "  31.3841" "   0.8121" " 117.3950" 
        phi 
"   0.1293" 
Practical Range with cor=0.05 for asymptotic range: 0.3872724

likfit: maximised log-likelihood = -64.63
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-22.0826" "  0.1319" " -0.0110" " -1.1131" " -0.0221" "140.1160" "  0.1640" 
Practical Range with cor=0.05 for asymptotic range: 0.4913964

likfit: maximised log-likelihood = -66.13
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"662.3362" "  0.1412" " -0.1813" "-10.2547" " -0.2148" " 82.2938" "  0.1924" 
Practical Range with cor=0.05 for asymptotic range: 0.5763785

likfit: maximised log-likelihood = -61.61
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"291.5533" " -0.0105" " -0.0834" "-11.0070" " -0.2908" " 96.8065" "  0.1950" 
Practical Range with cor=0.05 for asymptotic range: 0.5840037

likfit: maximised log-likelihood = -62.99
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"542.0928" "  0.0285" " -0.1130" "  3.6827" "  0.1079" " 69.9417" "  9.2783" 
Practical Range with cor=0.05 for asymptotic range: 27.79525

likfit: maximised log-likelihood = -60
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"19.6745" "-0.0402" "-0.0015" "-0.7157" "-0.0213" "69.0213" " 0.1702" 
Practical Range with cor=0.05 for asymptotic range: 0.5099318

likfit: maximised log-likelihood = -60.11
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 2.5419" "-0.0001" "-0.0005" "-0.0050" "-0.0001" " 0.0289" " 0.1882" 
Practical Range with cor=0.05 for asymptotic range: 0.5636799

likfit: maximised log-likelihood = 5.994
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9992045
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18 10  9 12  6  8  3  6  5 12 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  4 10  5  7  9  7 16 14 10 14  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18  8 12  7  6 12  8  8  6  9  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 11 11  6 10 10  9 13 12  9  1

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 13 12 16  8  5  6  6  9  7  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 11 13 12  9  6  5  9  5 10  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 15  6 10  8  9  6  4  7 16  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  9  8  9  9  9  9 12  9  9  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5 10  6 15  5  8  6 15  7 11 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 16 11 11  7  5  6  6  8  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20 15  9 10  6  8  9  5  6  4  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17  5  7 13  6 11  9  5  9  8 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 11  9  5  6 12  9 11  5 10  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  4  5 11 10  8 10  9 14  8  8 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 11 10 10  9 10  7 12 10  5  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 16  6  7 10  9  9  7  9  4 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10461951"
[1] "variance explained"
[1] 0.982491
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"5972.0644" "  -0.2543" "  -1.3748" " -20.9627" "  -0.5316" "2581.9010" 
        phi 
"   0.1329" 
Practical Range with cor=0.05 for asymptotic range: 0.3981205

likfit: maximised log-likelihood = -90.9
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5257.1394" "   -0.2989" "    1.2703" "   67.4323" "    2.0483" "  486.6080" 
         phi 
"   10.6333" 
Practical Range with cor=0.05 for asymptotic range: 31.85436

likfit: maximised log-likelihood = -76.4
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3448.5375" "    0.4231" "    0.7097" "    0.0985" "   -0.1199" "  949.7609" 
         phi 
"    0.1571" 
Practical Range with cor=0.05 for asymptotic range: 0.4707249

likfit: maximised log-likelihood = -82.4
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-822.8773" "   0.1580" "   0.1166" " -25.8568" "  -0.7546" " 577.2703" 
        phi 
"   5.1981" 
Practical Range with cor=0.05 for asymptotic range: 15.57214

likfit: maximised log-likelihood = -78.12
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1936.6992" "   -0.4655" "    0.3848" "  -41.3878" "   -1.1470" "  214.0451" 
         phi 
"    0.1824" 
Practical Range with cor=0.05 for asymptotic range: 0.5463015

likfit: maximised log-likelihood = -69.73
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-15.5427" "  0.0019" "  0.0012" " -0.9700" " -0.0250" "  0.6328" "  0.1532" 
Practical Range with cor=0.05 for asymptotic range: 0.4589622

likfit: maximised log-likelihood = -20.23
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.982491
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  8 13 14 13  8  6  7  6  8  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 11 12  7  4  9 10 12 10  7 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 22 13  6 10  8  6  5 10  6 10  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16  6 13  4  9  9  9  9 11  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20 13 13  8  7 10  8  5  3  8  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  4 10  8  8 12  7 15 10  6 10 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9948264
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"7109.2956" "  -0.3663" "  -1.5921" " -12.9252" "  -0.3241" "1240.6190" 
        phi 
"   0.1884" 
Practical Range with cor=0.05 for asymptotic range: 0.5642959

likfit: maximised log-likelihood = -84.67
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5115.0788" "   -0.3091" "    1.2419" "   67.9219" "    2.0584" "  531.9855" 
         phi 
"    8.5205" 
Practical Range with cor=0.05 for asymptotic range: 25.52507

likfit: maximised log-likelihood = -77.3
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3806.0602" "    0.4560" "    0.7789" "   -2.1158" "   -0.1773" "  739.4398" 
         phi 
"    0.1903" 
Practical Range with cor=0.05 for asymptotic range: 0.5702227

likfit: maximised log-likelihood = -80.27
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1048.1167" "    0.1774" "    0.1611" "  -26.7482" "   -0.7760" "  529.5305" 
         phi 
"    4.8260" 
Practical Range with cor=0.05 for asymptotic range: 14.4575

likfit: maximised log-likelihood = -77.4
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1972.0416" "   -0.4617" "    0.3916" "  -41.5991" "   -1.1535" "  213.4457" 
         phi 
"    0.1016" 
Practical Range with cor=0.05 for asymptotic range: 0.3043833

likfit: maximised log-likelihood = -69.71
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"327.0997" "  0.0425" " -0.1070" "-12.8150" " -0.2510" "316.1403" "  4.4603" 
Practical Range with cor=0.05 for asymptotic range: 13.36173

likfit: maximised log-likelihood = -73.02
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"196.7777" "  0.1069" " -0.0668" " -7.2727" " -0.1966" "309.6593" "  0.1729" 
Practical Range with cor=0.05 for asymptotic range: 0.5180617

likfit: maximised log-likelihood = -72.87
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"528.7852" "  0.0044" " -0.0928" " 12.1472" "  0.3534" "255.2652" "  0.1610" 
Practical Range with cor=0.05 for asymptotic range: 0.4823246

likfit: maximised log-likelihood = -71.23
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-200.1658" "  -0.0768" "   0.0732" "  10.1829" "   0.2381" " 221.2092" 
        phi 
"   0.1584" 
Practical Range with cor=0.05 for asymptotic range: 0.4743777

likfit: maximised log-likelihood = -70.01
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"791.7171" " -0.0627" " -0.1998" "-16.7886" " -0.4141" "140.6676" "  0.1355" 
Practical Range with cor=0.05 for asymptotic range: 0.4058296

likfit: maximised log-likelihood = -66.17
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 8.6066" "-0.0005" "-0.0034" "-0.7994" "-0.0206" " 0.2142" " 0.1921" 
Practical Range with cor=0.05 for asymptotic range: 0.5754576

likfit: maximised log-likelihood = -11.03
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9948264
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 16 10 10  5 14 10  5  6  8  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  7  7  2 12 10  7  9 13 12 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 10 12  7  9 11  9  6 10  3  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 16  7 13  6  8  4 11  5  6 15

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 15  9  4  9  8 14  4 10  7 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 12 13 12 10 11  7  5 10  6  2

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 15 10 11  7  7  6  4  8 10  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  6 12 11  8 12  7  6  5 13  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 10 13  7  4  6 10 15  6  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 11 10 10  8  6  9  9  6  9  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 18  7  9  9 10  6 11  3  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9992783
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6741.9825" "  -0.3495" "  -1.4347" "  26.5840" "   0.6938" " 783.1258" 
        phi 
"   0.1341" 
Practical Range with cor=0.05 for asymptotic range: 0.4018401

likfit: maximised log-likelihood = -80.76
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5137.8638" "   -0.3144" "    1.2562" "   72.2769" "    2.1710" "  505.1089" 
         phi 
"    9.4143" 
Practical Range with cor=0.05 for asymptotic range: 28.20267

likfit: maximised log-likelihood = -76.8
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3686.7325" "    0.4517" "    0.7293" "  -14.1605" "   -0.4875" "  720.5967" 
         phi 
"    0.1926" 
Practical Range with cor=0.05 for asymptotic range: 0.5770669

likfit: maximised log-likelihood = -80.05
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-980.2803" "   0.1737" "   0.1332" " -33.5240" "  -0.9508" " 502.3856" 
        phi 
"   4.9272" 
Practical Range with cor=0.05 for asymptotic range: 14.76059

likfit: maximised log-likelihood = -76.95
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1960.4399" "   -0.4608" "    0.3867" "  -42.7307" "   -1.1823" "  211.1544" 
         phi 
"    0.1855" 
Practical Range with cor=0.05 for asymptotic range: 0.5557769

likfit: maximised log-likelihood = -69.62
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"330.9526" "  0.0426" " -0.1107" "-14.2181" " -0.2872" "307.6031" "  4.5827" 
Practical Range with cor=0.05 for asymptotic range: 13.72845

likfit: maximised log-likelihood = -72.79
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"203.9265" "  0.1066" " -0.0700" " -8.0864" " -0.2179" "308.5799" "  0.1679" 
Practical Range with cor=0.05 for asymptotic range: 0.5030356

likfit: maximised log-likelihood = -72.84
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"500.5654" "  0.0036" " -0.0809" " 14.9513" "  0.4256" "251.1902" "  0.1959" 
Practical Range with cor=0.05 for asymptotic range: 0.5868588

likfit: maximised log-likelihood = -71.09
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-192.8165" "  -0.0741" "   0.0700" "   9.5838" "   0.2235" " 223.7592" 
        phi 
"   0.1583" 
Practical Range with cor=0.05 for asymptotic range: 0.4742198

likfit: maximised log-likelihood = -70.11
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"765.9168" " -0.0643" " -0.1906" "-15.1128" " -0.3713" "144.5538" "  0.2203" 
Practical Range with cor=0.05 for asymptotic range: 0.6600395

likfit: maximised log-likelihood = -66.4
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"284.7204" "  0.1303" " -0.0882" " -6.4342" " -0.1519" "131.4479" "  0.1328" 
Practical Range with cor=0.05 for asymptotic range: 0.3977207

likfit: maximised log-likelihood = -65.59
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-298.6771" "  -0.0065" "   0.1128" "  23.6108" "   0.6078" "  86.1509" 
        phi 
"   0.1350" 
Practical Range with cor=0.05 for asymptotic range: 0.4045482

likfit: maximised log-likelihood = -62
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"166.9569" " -0.0431" " -0.0368" " -3.0514" " -0.0920" " 93.6398" "  2.8886" 
Practical Range with cor=0.05 for asymptotic range: 8.653585

likfit: maximised log-likelihood = -62.7
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"577.8185" "  0.0348" " -0.1201" "  4.4141" "  0.1304" " 68.3208" "  9.1090" 
Practical Range with cor=0.05 for asymptotic range: 27.28807

likfit: maximised log-likelihood = -59.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"72.9126" " 0.0396" "-0.0160" " 1.8538" " 0.0503" "72.2151" " 0.1825" 
Practical Range with cor=0.05 for asymptotic range: 0.5468479

likfit: maximised log-likelihood = -60.5
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 0.8092" "-0.0001" "-0.0001" " 0.0391" " 0.0010" " 0.0088" " 0.1656" 
Practical Range with cor=0.05 for asymptotic range: 0.4959645

likfit: maximised log-likelihood = 16.16
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9992783
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 10 11  8  9 12 12  4  8 10  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5  8  9 11  4 10  7 12 11  9 14

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 19  9  6 11  7  7  6  6  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 10 11 14  9  7  9  4  8  7 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 15 12  9  6  7  8  9  8  9  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 11  7 10 10  8 15  6  7 11  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 15  8 12 10 10  4  5  6  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 10  8 10  8  6  7  8 11  8 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  6  9  7  8 13 10  5 11  8  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 17 10 11 13  7 10  6  7  5  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  6  9 12  8 14  8  6  8 11  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 14  9  5 11  8  8  8  9 10  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 10 14  4  9  8  9 11  8  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 10  8  7  9 11 10  6  9 10 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  9 18  8 11  6  5  6 10  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  9  7  9 12  7  8  7 16  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10523436"
[1] "variance explained"
[1] 0.9830179
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"5612.5381" "  -0.1112" "  -1.2993" " -14.0918" "  -0.3373" "2737.7331" 
        phi 
"   0.1793" 
Practical Range with cor=0.05 for asymptotic range: 0.5371543

likfit: maximised log-likelihood = -91.4
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-5567.416" "   -0.362" "    1.327" "   58.833" "    1.810" "  518.820" 
        phi 
"   12.137" 
Practical Range with cor=0.05 for asymptotic range: 36.35894

likfit: maximised log-likelihood = -76.81
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3357.7677" "    0.3076" "    0.6854" "   -8.3770" "   -0.3542" "  976.9859" 
         phi 
"    0.2221" 
Practical Range with cor=0.05 for asymptotic range: 0.6653891

likfit: maximised log-likelihood = -82.64
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-905.0957" "   0.1795" "   0.1397" " -22.2321" "  -0.6659" " 583.8546" 
        phi 
"   5.4421" 
Practical Range with cor=0.05 for asymptotic range: 16.30306

likfit: maximised log-likelihood = -78.21
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1508.1250" "   -0.3893" "    0.2952" "  -35.6003" "   -0.9825" "  253.8719" 
         phi 
"    0.1993" 
Practical Range with cor=0.05 for asymptotic range: 0.5970967

likfit: maximised log-likelihood = -71.19
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-23.6702" "  0.0049" "  0.0034" " -0.5514" " -0.0133" "  0.8270" "  9.5043" 
Practical Range with cor=0.05 for asymptotic range: 28.47231

likfit: maximised log-likelihood = -22.28
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9830179
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 16 11 14 12  6  7  9  2  5  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  4  8 13 14 12  4  5  7 11  8 14

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 10 12  7  8 10  9  4  9  6  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 11 13  4 12 10  7  6  8  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19  6 10  6  9 14  5  9  6  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  4  8 10 13  9 10 11 11 11  7  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9947859
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6140.1857" "  -0.4965" "  -1.3271" "   7.2378" "   0.1543" "1046.3430" 
        phi 
"   0.2124" 
Practical Range with cor=0.05 for asymptotic range: 0.6363992

likfit: maximised log-likelihood = -83.22
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-5491.442" "   -0.408" "    1.320" "   60.627" "    1.843" "  567.917" 
        phi 
"    9.866" 
Practical Range with cor=0.05 for asymptotic range: 29.55438

likfit: maximised log-likelihood = -77.77
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3529.3283" "    0.4216" "    0.6978" "  -14.2891" "   -0.4896" "  691.2914" 
         phi 
"    0.0989" 
Practical Range with cor=0.05 for asymptotic range: 0.2962966

likfit: maximised log-likelihood = -79.7
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1077.1258" "    0.2413" "    0.1654" "  -24.3182" "   -0.7079" "  504.6559" 
         phi 
"    4.2998" 
Practical Range with cor=0.05 for asymptotic range: 12.88105

likfit: maximised log-likelihood = -77
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1519.8466" "   -0.3799" "    0.2957" "  -36.1143" "   -0.9953" "  260.6152" 
         phi 
"    0.1038" 
Practical Range with cor=0.05 for asymptotic range: 0.3108332

likfit: maximised log-likelihood = -71.41
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"477.2728" "  0.0175" " -0.1448" "-16.5892" " -0.3423" "288.7429" "  4.9303" 
Practical Range with cor=0.05 for asymptotic range: 14.76976

likfit: maximised log-likelihood = -72.24
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-677.2132" "  -0.0232" "   0.1641" "   6.9430" "   0.1512" " 263.7947" 
        phi 
"   4.0030" 
Practical Range with cor=0.05 for asymptotic range: 11.99205

likfit: maximised log-likelihood = -71.49
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-167.4065" "  -0.1452" "   0.0975" "  23.5362" "   0.6125" " 190.4455" 
        phi 
"   0.1344" 
Practical Range with cor=0.05 for asymptotic range: 0.402665

likfit: maximised log-likelihood = -68.74
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
" -8.7023" "  0.0103" "  0.0173" "  7.6864" "  0.1866" "247.3879" "  0.1643" 
Practical Range with cor=0.05 for asymptotic range: 0.4921834

likfit: maximised log-likelihood = -70.97
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"732.8248" " -0.1186" " -0.1849" "-19.0677" " -0.4884" "143.8646" "  0.1945" 
Practical Range with cor=0.05 for asymptotic range: 0.5825905

likfit: maximised log-likelihood = -66.36
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"-0.0879" "-0.0034" "-0.0004" "-0.3939" "-0.0105" " 0.1626" " 0.0996" 
Practical Range with cor=0.05 for asymptotic range: 0.2984847

likfit: maximised log-likelihood = -8.683
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9947859
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  8 12  1 14  3 11 12 11 11  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 11  9  7  6  9  8 13  6 13 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 24 13  9  6 14  7  6  5  4  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  5 10  6  7  6  8  9 10 18  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19 12 11  9  8 10  6  6  4 10  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  8 15  5  7 10  9  9  5 13  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  7 13 10 10  9  4  5 13 11  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 19  9 12  7  7 13  6  6  5  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  3 10  5  8  9  5  5 15 22 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 13 10  8  6  7 11  6  4 14  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 14  8  8  6  9 10 11 10  8  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.999315
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6204.4155" "  -0.3454" "  -1.3134" "  28.8042" "   0.7279" " 730.8907" 
        phi 
"   0.2203" 
Practical Range with cor=0.05 for asymptotic range: 0.6600561

likfit: maximised log-likelihood = -80.17
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5396.0464" "   -0.3964" "    1.3013" "   62.4186" "    1.8949" "  554.8771" 
         phi 
"   11.6253" 
Practical Range with cor=0.05 for asymptotic range: 34.82643

likfit: maximised log-likelihood = -77.43
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3540.6737" "    0.3774" "    0.6922" "  -20.5680" "   -0.6565" "  692.1967" 
         phi 
"    0.0987" 
Practical Range with cor=0.05 for asymptotic range: 0.2957884

likfit: maximised log-likelihood = -79.71
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1072.7302" "    0.2162" "    0.1593" "  -28.2155" "   -0.8114" "  497.3687" 
         phi 
"    4.6844" 
Practical Range with cor=0.05 for asymptotic range: 14.03325

likfit: maximised log-likelihood = -76.87
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1524.9814" "   -0.3830" "    0.2959" "  -36.7327" "   -1.0117" "  254.3488" 
         phi 
"    0.1765" 
Practical Range with cor=0.05 for asymptotic range: 0.5286322

likfit: maximised log-likelihood = -71.2
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"460.1223" "  0.0108" " -0.1415" "-17.1804" " -0.3584" "287.2964" "  5.0167" 
Practical Range with cor=0.05 for asymptotic range: 15.02873

likfit: maximised log-likelihood = -72.2
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-678.8669" "  -0.0272" "   0.1625" "   5.7711" "   0.1204" " 264.1745" 
        phi 
"   4.0473" 
Practical Range with cor=0.05 for asymptotic range: 12.12459

likfit: maximised log-likelihood = -71.5
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-168.2793" "  -0.1339" "   0.1004" "  25.5335" "   0.6659" " 187.0639" 
        phi 
"   0.1340" 
Practical Range with cor=0.05 for asymptotic range: 0.4013347

likfit: maximised log-likelihood = -68.59
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-16.5469" "  0.0058" "  0.0178" "  6.8859" "  0.1655" "247.7491" "  0.1634" 
Practical Range with cor=0.05 for asymptotic range: 0.4895756

likfit: maximised log-likelihood = -70.98
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"735.6620" " -0.1115" " -0.1849" "-18.4087" " -0.4706" "146.6318" "  0.1659" 
Practical Range with cor=0.05 for asymptotic range: 0.4970334

likfit: maximised log-likelihood = -66.52
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-506.9006" "  -0.0019" "   0.1121" "   0.0628" "  -0.0323" " 135.5479" 
        phi 
"   0.1092" 
Practical Range with cor=0.05 for asymptotic range: 0.3271752

likfit: maximised log-likelihood = -65.85
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-101.3946" "   0.0566" "   0.0576" "  21.0737" "   0.5606" " 102.6995" 
        phi 
"   0.1354" 
Practical Range with cor=0.05 for asymptotic range: 0.4055659

likfit: maximised log-likelihood = -63.49
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-123.4615" "  -0.0801" "   0.0485" "   6.2838" "   0.1441" "  84.2589" 
        phi 
"   3.0606" 
Practical Range with cor=0.05 for asymptotic range: 9.168703

likfit: maximised log-likelihood = -61.8
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"339.8489" "  0.0169" " -0.0799" " -2.4675" " -0.0608" " 91.4040" "  2.2941" 
Practical Range with cor=0.05 for asymptotic range: 6.872636

likfit: maximised log-likelihood = -62.5
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"591.3846" "  0.0268" " -0.1256" "  2.7066" "  0.0861" " 69.2278" " 10.7114" 
Practical Range with cor=0.05 for asymptotic range: 32.08852

likfit: maximised log-likelihood = -59.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 1.2629" "-0.0002" "-0.0001" " 0.0631" " 0.0016" " 0.0079" " 0.1659" 
Practical Range with cor=0.05 for asymptotic range: 0.4970705

likfit: maximised log-likelihood = 17
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.999315
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  7 12 16 10  5  6  4 10 13  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5  8  7 11 13  6  8 10 12 14  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18  9 10 11 10  6 10  3  7  7  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 13  8  7  7  6 10  5 10  8 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18 15 15 10  5  3  5  9  6  9  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 10 12  8  8 10 10  9  4  8 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 11 11  7  7  7  9 11 11  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20 10 12  5  8 14 10  7  4  4  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  8 10 11 10 18  5 13  7  8  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  9 17  9  9  8 10  8  4  8  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20  9 16  5 14  3  8  3  5  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  9 13  6  7  8  8 13  8 12  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 15  7 15  6  8  5 13  7  5  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 10  9 11 15 10  5  6 10  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5  6  5 12 11 13  6 10 17  6  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6 12 10 15  9  8 10  7  5 12  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10523437"
[1] "variance explained"
[1] 0.9818542
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6295.2348" "  -0.1614" "  -1.4434" " -13.6546" "  -0.2777" "2492.8130" 
        phi 
"   0.1287" 
Practical Range with cor=0.05 for asymptotic range: 0.3855091

likfit: maximised log-likelihood = -90.6
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5734.9902" "   -0.3649" "    1.3596" "   56.4122" "    1.7359" "  485.2189" 
         phi 
"   11.6134" 
Practical Range with cor=0.05 for asymptotic range: 34.79078

likfit: maximised log-likelihood = -76.29
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3334.6107" "    0.3614" "    0.6783" "   -7.5542" "   -0.3500" "  991.4980" 
         phi 
"    0.1772" 
Practical Range with cor=0.05 for asymptotic range: 0.5307162

likfit: maximised log-likelihood = -82.77
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-470.5701" "   0.2284" "   0.0458" " -19.8613" "  -0.5978" " 554.6508" 
        phi 
"   5.4308" 
Practical Range with cor=0.05 for asymptotic range: 16.26917

likfit: maximised log-likelihood = -77.78
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1703.6820" "   -0.3518" "    0.3311" "  -37.7366" "   -1.0626" "  261.8138" 
         phi 
"    0.1025" 
Practical Range with cor=0.05 for asymptotic range: 0.3070893

likfit: maximised log-likelihood = -71.45
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-23.3875" "  0.0049" "  0.0032" " -0.6299" " -0.0152" "  0.7030" "  9.6728" 
Practical Range with cor=0.05 for asymptotic range: 28.97725

likfit: maximised log-likelihood = -20.88
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9818542
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 22  5  9  7  5 13 11  6  6  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  8  7 11 13 11  8 13  9  4  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 13 12  5 10  8  8  6  8  9  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 12 15  7  7 10 10  8  6  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 12  9  9  6  6 11  8  9 11  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  9  9  9  7 14 10  9  8 13  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.994301
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"7183.4926" "  -0.3961" "  -1.5897" "  -5.0791" "  -0.1124" "1101.8671" 
        phi 
"   0.1879" 
Practical Range with cor=0.05 for asymptotic range: 0.5629122

likfit: maximised log-likelihood = -83.66
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5628.6741" "   -0.3903" "    1.3409" "   56.7957" "    1.7355" "  555.7672" 
         phi 
"    9.5191" 
Practical Range with cor=0.05 for asymptotic range: 28.51669

likfit: maximised log-likelihood = -77.61
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3608.0041" "    0.4303" "    0.7246" "   -9.7486" "   -0.3901" "  759.2795" 
         phi 
"    0.1017" 
Practical Range with cor=0.05 for asymptotic range: 0.3045814

likfit: maximised log-likelihood = -80.5
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-668.3041" "   0.2673" "   0.0812" " -21.0764" "  -0.6186" " 491.7570" 
        phi 
"   5.4384" 
Practical Range with cor=0.05 for asymptotic range: 16.29194

likfit: maximised log-likelihood = -76.76
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1744.2041" "   -0.3406" "    0.3376" "  -38.2258" "   -1.0737" "  266.5027" 
         phi 
"    0.2041" 
Practical Range with cor=0.05 for asymptotic range: 0.611498

likfit: maximised log-likelihood = -71.6
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"292.1008" "  0.0307" " -0.1058" "-16.4745" " -0.3417" "287.2465" "  5.2038" 
Practical Range with cor=0.05 for asymptotic range: 15.58927

likfit: maximised log-likelihood = -72.19
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"245.3507" "  0.0899" " -0.0839" "-11.3581" " -0.3006" "306.5638" "  0.1409" 
Practical Range with cor=0.05 for asymptotic range: 0.4220319

likfit: maximised log-likelihood = -72.79
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"429.5585" " -0.0552" " -0.0721" "  8.3609" "  0.2431" "262.5487" "  0.2226" 
Practical Range with cor=0.05 for asymptotic range: 0.6667671

likfit: maximised log-likelihood = -71.47
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-87.6136" " -0.0420" "  0.0524" " 14.0848" "  0.3514" "230.3340" "  0.1607" 
Practical Range with cor=0.05 for asymptotic range: 0.4815504

likfit: maximised log-likelihood = -70.36
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"622.7233" " -0.0973" " -0.1623" "-18.6816" " -0.4826" "149.6610" "  0.1619" 
Practical Range with cor=0.05 for asymptotic range: 0.484901

likfit: maximised log-likelihood = -66.69
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 9.0002" "-0.0006" "-0.0031" "-0.6218" "-0.0160" " 0.1596" " 0.1795" 
Practical Range with cor=0.05 for asymptotic range: 0.5378712

likfit: maximised log-likelihood = -8.522
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.994301
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20  4  7 16  7 10  8  5  4  7 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 10  5 11  9 12 10  8  7  5 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 11 11  6 11  8  8  9  5 11  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6 16  5  9 11  7  8  7 11 12  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 16 12 10  8  8 13  4  7  7  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19 11  9 14  4 12  8  8  6  4  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 14  7  7  9 10 11  7  7 11  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18  9  6  8  9 11 11  9  4  7  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 16 12  7 10 10  5  8  9  7  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  7 12  8  6 11  3 11 11 13  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 16 12  7  9  9  7  4 10  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9992344
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6849.9247" "  -0.4259" "  -1.4448" "  29.3293" "   0.7682" " 894.8560" 
        phi 
"   0.2033" 
Practical Range with cor=0.05 for asymptotic range: 0.6089087

likfit: maximised log-likelihood = -81.89
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-5602.045" "   -0.399" "    1.344" "   60.659" "    1.837" "  542.545" 
        phi 
"   10.673" 
Practical Range with cor=0.05 for asymptotic range: 31.9743

likfit: maximised log-likelihood = -77.32
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3500.4004" "    0.4401" "    0.6797" "  -19.9241" "   -0.6502" "  741.8075" 
         phi 
"    0.1901" 
Practical Range with cor=0.05 for asymptotic range: 0.5693937

likfit: maximised log-likelihood = -80.3
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-614.2263" "   0.2712" "   0.0578" " -26.6637" "  -0.7614" " 474.3019" 
        phi 
"   5.2797" 
Practical Range with cor=0.05 for asymptotic range: 15.81657

likfit: maximised log-likelihood = -76.45
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1733.1246" "   -0.3394" "    0.3317" "  -39.8771" "   -1.1161" "  262.0300" 
         phi 
"    0.1032" 
Practical Range with cor=0.05 for asymptotic range: 0.309253

likfit: maximised log-likelihood = -71.45
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"297.4651" "  0.0345" " -0.1107" "-18.0912" " -0.3828" "274.6988" "  5.4909" 
Practical Range with cor=0.05 for asymptotic range: 16.44925

likfit: maximised log-likelihood = -71.8
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"247.2119" "  0.0897" " -0.0853" "-11.8688" " -0.3143" "305.7101" "  0.1400" 
Practical Range with cor=0.05 for asymptotic range: 0.4194276

likfit: maximised log-likelihood = -72.76
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"401.9316" " -0.0581" " -0.0592" " 11.6817" "  0.3287" "256.9918" "  0.1321" 
Practical Range with cor=0.05 for asymptotic range: 0.3957762

likfit: maximised log-likelihood = -71.29
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-87.2794" " -0.0396" "  0.0510" " 13.5695" "  0.3386" "232.2419" "  0.1608" 
Practical Range with cor=0.05 for asymptotic range: 0.4816616

likfit: maximised log-likelihood = -70.43
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"593.6204" " -0.1024" " -0.1520" "-17.0032" " -0.4404" "152.3231" "  0.1593" 
Practical Range with cor=0.05 for asymptotic range: 0.4772471

likfit: maximised log-likelihood = -66.84
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-11.4468" "  0.0827" " -0.0198" " -7.2731" " -0.1931" "149.7363" "  0.1628" 
Practical Range with cor=0.05 for asymptotic range: 0.4876752

likfit: maximised log-likelihood = -66.7
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"488.6555" "  0.0768" " -0.1006" "  7.6591" "  0.2419" "112.0878" "  2.6862" 
Practical Range with cor=0.05 for asymptotic range: 8.047054

likfit: maximised log-likelihood = -64.23
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"429.1222" "  0.0049" " -0.1384" "-22.2965" " -0.5693" " 77.6379" "  0.0979" 
Practical Range with cor=0.05 for asymptotic range: 0.2932741

likfit: maximised log-likelihood = -61.11
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"178.5315" " -0.0181" " -0.0304" "  2.7701" "  0.0639" " 90.5097" "  0.1054" 
Practical Range with cor=0.05 for asymptotic range: 0.315757

likfit: maximised log-likelihood = -62.42
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-560.0520" "  -0.0320" "   0.1194" "  -2.6537" "  -0.0837" "  68.6893" 
        phi 
"   9.6656" 
Practical Range with cor=0.05 for asymptotic range: 28.95555

likfit: maximised log-likelihood = -59.83
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 1.9271" "-0.0012" "-0.0001" " 0.1069" " 0.0026" " 0.0608" " 0.2030" 
Practical Range with cor=0.05 for asymptotic range: 0.6081137

likfit: maximised log-likelihood = -0.3142
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9992344
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20 10 10  7 10  3  5  6 12 11  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  7  5 15 12 15  8  9  5 10  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 21  9  8  6 10  8  5  8  5 13  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 14  7  6  5  5  9 13 14  8  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 12 14  8  9  5  6  4 10  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 12 14  8 15  7  4  7 10  7  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  9  9  9 10  4 13  9  6  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 15 12  3 11 10 13  5  8  3  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 12  7 13  8  7 10  3  4 13  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  9 10 14  6  9 10  6 10 11  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  9 13 12  6 11  6  6 10  4  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5  8 14  8 11  6  9 13 11  7  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19 10 12 12  3 10  4  6  7  6 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 16 11 10  4 10 10  6  6  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  4 13 14  9 12  8  6  5 12 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 19 11  9  6  9  8  6  7  2  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10523439"
[1] "variance explained"
[1] 0.9822236
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6202.3889" "  -0.0008" "  -1.4478" " -19.3885" "  -0.4577" "1945.1359" 
        phi 
"   0.1353" 
Practical Range with cor=0.05 for asymptotic range: 0.4053072

likfit: maximised log-likelihood = -88.49
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-5557.215" "   -0.410" "    1.330" "   58.567" "    1.793" "  460.237" 
        phi 
"    9.945" 
Practical Range with cor=0.05 for asymptotic range: 29.7932

likfit: maximised log-likelihood = -75.98
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3719.7620" "    0.3335" "    0.7652" "   -6.4614" "   -0.3064" "  989.4888" 
         phi 
"    0.1358" 
Practical Range with cor=0.05 for asymptotic range: 0.4069038

likfit: maximised log-likelihood = -82.75
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-812.3470" "   0.1563" "   0.1161" " -24.9583" "  -0.7288" " 582.9963" 
        phi 
"   5.4034" 
Practical Range with cor=0.05 for asymptotic range: 16.1872

likfit: maximised log-likelihood = -78.2
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1505.6988" "   -0.4037" "    0.2994" "  -34.2324" "   -0.9571" "  249.9630" 
         phi 
"    0.1562" 
Practical Range with cor=0.05 for asymptotic range: 0.4678448

likfit: maximised log-likelihood = -71.05
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-19.9882" "  0.0062" "  0.0025" " -0.5316" " -0.0128" "  0.5635" "  9.9900" 
Practical Range with cor=0.05 for asymptotic range: 29.92727

likfit: maximised log-likelihood = -18.98
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9822236
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 13  8  9 13  7  5 13  8  5  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 11 10  6  6  9 12 11 12  5 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 13 12 10 12 11  9  9  3  8  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 13 10  6 10  6  8  9 10 12  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 16 12 13 10  2  9  4  5  2 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  9  9  8  5 13 12  5 11 12  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9942966
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"7168.6625" "  -0.3011" "  -1.6272" " -20.7822" "  -0.5193" " 986.0170" 
        phi 
"   2.6839" 
Practical Range with cor=0.05 for asymptotic range: 8.040218

likfit: maximised log-likelihood = -82.71
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5502.7986" "   -0.4481" "    1.3224" "   58.4744" "    1.7837" "  492.5045" 
         phi 
"    7.1092" 
Practical Range with cor=0.05 for asymptotic range: 21.2974

likfit: maximised log-likelihood = -76.71
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4003.6034" "    0.4258" "    0.8174" "   -6.0833" "   -0.2890" "  736.2458" 
         phi 
"    0.1898" 
Practical Range with cor=0.05 for asymptotic range: 0.5685463

likfit: maximised log-likelihood = -80.24
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1033.3388" "    0.2050" "    0.1603" "  -24.0254" "   -0.6987" "  527.1340" 
         phi 
"    4.7074" 
Practical Range with cor=0.05 for asymptotic range: 14.10211

likfit: maximised log-likelihood = -77.36
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1526.9655" "   -0.3990" "    0.3035" "  -34.2111" "   -0.9568" "  252.8484" 
         phi 
"    0.1689" 
Practical Range with cor=0.05 for asymptotic range: 0.5058752

likfit: maximised log-likelihood = -71.15
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"363.4188" "  0.0731" " -0.1309" "-19.6239" " -0.4332" "278.1874" "  3.6230" 
Practical Range with cor=0.05 for asymptotic range: 10.85343

likfit: maximised log-likelihood = -71.95
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-481.6283" "   0.0580" "   0.0934" "  -3.7509" "  -0.1360" " 266.6995" 
        phi 
"   0.0999" 
Practical Range with cor=0.05 for asymptotic range: 0.2993328

likfit: maximised log-likelihood = -71.6
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
" 87.6719" "  0.0263" " -0.0315" " -5.0379" " -0.1299" "262.2352" "  0.2126" 
Practical Range with cor=0.05 for asymptotic range: 0.6367661

likfit: maximised log-likelihood = -71.46
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-140.3142" "  -0.0550" "   0.0732" "  17.9099" "   0.4436" " 207.6360" 
        phi 
"   0.1850" 
Practical Range with cor=0.05 for asymptotic range: 0.5542587

likfit: maximised log-likelihood = -69.48
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"507.2974" " -0.1445" " -0.1276" "-16.4836" " -0.4370" "137.0360" "  0.1353" 
Practical Range with cor=0.05 for asymptotic range: 0.405184

likfit: maximised log-likelihood = -65.94
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"11.6969" " 0.0004" "-0.0043" "-0.8574" "-0.0219" " 0.1504" " 0.1019" 
Practical Range with cor=0.05 for asymptotic range: 0.3052652

likfit: maximised log-likelihood = -8.022
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9942966
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 13 12 11  9  4  8  6  7  8  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  8 15  8 11  9  8  9 13  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 10 10  7 11  6 11  9 10  6 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5  6 10  7 11  6 11  7 11 17  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19 13 12  9 12 10  5  5  6  3  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 10  9 11  9  6  7 10  3  7 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19 16  3 12  8  6 10  4  8  6  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  9 13  3  6 14  9  8 10 10 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  2 12 14  7 13 11 13  4  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 12 12 11  7  6  7 10  7  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 22 10  6  8  5 11  3  6  9  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.999116
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6328.0384" "  -0.3313" "  -1.3694" "  15.0798" "   0.3871" " 815.3051" 
        phi 
"   0.1776" 
Practical Range with cor=0.05 for asymptotic range: 0.5319816

likfit: maximised log-likelihood = -81.1
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5550.0966" "   -0.4517" "    1.3406" "   62.1562" "    1.8765" "  461.9040" 
         phi 
"    8.0888" 
Practical Range with cor=0.05 for asymptotic range: 24.23189

likfit: maximised log-likelihood = -76.13
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3759.7276" "    0.4351" "    0.7421" "  -16.6828" "   -0.5565" "  745.4069" 
         phi 
"    0.2052" 
Practical Range with cor=0.05 for asymptotic range: 0.6148457

likfit: maximised log-likelihood = -80.34
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-888.2977" "   0.2104" "   0.1161" " -30.0585" "  -0.8508" " 507.7259" 
        phi 
"   4.8371" 
Practical Range with cor=0.05 for asymptotic range: 14.49054

likfit: maximised log-likelihood = -77.04
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1520.6786" "   -0.3984" "    0.3005" "  -34.9948" "   -0.9769" "  251.0370" 
         phi 
"    0.1045" 
Practical Range with cor=0.05 for asymptotic range: 0.31295

likfit: maximised log-likelihood = -71.09
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"389.2748" "  0.0746" " -0.1387" "-20.6333" " -0.4583" "269.0180" "  3.7120" 
Practical Range with cor=0.05 for asymptotic range: 11.12021

likfit: maximised log-likelihood = -71.66
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-422.1186" "   0.0617" "   0.0743" "  -6.6838" "  -0.2109" " 265.9941" 
        phi 
"   0.1564" 
Practical Range with cor=0.05 for asymptotic range: 0.4685494

likfit: maximised log-likelihood = -71.58
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
" 82.4370" "  0.0256" " -0.0279" " -3.8652" " -0.1002" "262.4748" "  0.1325" 
Practical Range with cor=0.05 for asymptotic range: 0.3969068

likfit: maximised log-likelihood = -71.47
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-146.1939" "  -0.0555" "   0.0745" "  17.9076" "   0.4434" " 207.4283" 
        phi 
"   0.1588" 
Practical Range with cor=0.05 for asymptotic range: 0.4756713

likfit: maximised log-likelihood = -69.47
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"468.3237" " -0.1457" " -0.1160" "-14.9959" " -0.3996" "139.1058" "  0.1335" 
Practical Range with cor=0.05 for asymptotic range: 0.3998382

likfit: maximised log-likelihood = -66.07
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-138.6397" "   0.0156" "   0.0073" " -11.4342" "  -0.3212" " 146.3842" 
        phi 
"   0.1979" 
Practical Range with cor=0.05 for asymptotic range: 0.5928906

likfit: maximised log-likelihood = -66.5
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-587.0909" "  -0.0667" "   0.1726" "  18.7807" "   0.4622" "  80.7199" 
        phi 
"   0.1954" 
Practical Range with cor=0.05 for asymptotic range: 0.5852575

likfit: maximised log-likelihood = -61.45
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-147.8351" "  -0.0165" "   0.0086" " -12.6889" "  -0.3389" " 107.0242" 
        phi 
"   0.2061" 
Practical Range with cor=0.05 for asymptotic range: 0.617319

likfit: maximised log-likelihood = -63.84
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-355.5565" "   0.0134" "   0.0814" "   3.3126" "   0.0907" "  86.3049" 
        phi 
"   0.2004" 
Practical Range with cor=0.05 for asymptotic range: 0.6004686

likfit: maximised log-likelihood = -62.01
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-28.7040" "  0.0345" "  0.0069" "  2.0894" "  0.0560" " 69.4233" "  0.1617" 
Practical Range with cor=0.05 for asymptotic range: 0.484366

likfit: maximised log-likelihood = -60.16
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"-4.9509" "-0.0003" " 0.0009" "-0.1205" "-0.0033" " 0.0059" " 0.2106" 
Practical Range with cor=0.05 for asymptotic range: 0.6307863

likfit: maximised log-likelihood = 19.49
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.999116
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 12  6 10  9  1 10 10  8 13  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  9 12  9 10 10 11  7  6 10  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 12  9 13 11  6  6  6 12  6  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 13  5  7  6  7  9  8 13 10  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 15 10  5  7  8  7  6  9  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 22 13 14 13  6  4  8  6  4  7  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 10 14 13 12  5  4  5  8  7  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  3 16 10  9 12  6  8 12  9  7  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6  8 10  7 11  9  7  9 14 11  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 11 18 15  6  8  5  4  9  5  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 12  9 14 14  6  7  7  5  8  2

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5 12  7 12  9 16  4  6  9 10 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  7  3 11 14  6  6 10 10 15 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 22 11 11  9 12  6  3  7  5  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 13 13  8 11  7 11  5  8  4  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  8 10  9  8 12  6  7  9  9  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10523443"
[1] "variance explained"
[1] 0.9816641
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6589.9203" "  -0.1518" "  -1.4819" "  -1.8246" "  -0.0032" "2485.9521" 
        phi 
"   0.1324" 
Practical Range with cor=0.05 for asymptotic range: 0.3965233

likfit: maximised log-likelihood = -90.58
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-6069.7507" "   -0.3767" "    1.4333" "   56.6499" "    1.7478" "  474.3836" 
         phi 
"    8.0052" 
Practical Range with cor=0.05 for asymptotic range: 23.98139

likfit: maximised log-likelihood = -76.35
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3963.9831" "    0.3335" "    0.8053" "  -12.9562" "   -0.4822" "  943.4221" 
         phi 
"    0.1364" 
Practical Range with cor=0.05 for asymptotic range: 0.4085551

likfit: maximised log-likelihood = -82.34
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-843.4352" "   0.1908" "   0.1177" " -25.8141" "  -0.7511" " 559.7198" 
        phi 
"   5.4698" 
Practical Range with cor=0.05 for asymptotic range: 16.38593

likfit: maximised log-likelihood = -77.85
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-2094.4769" "   -0.3903" "    0.4116" "  -40.9474" "   -1.1311" "  201.0932" 
         phi 
"    0.1899" 
Practical Range with cor=0.05 for asymptotic range: 0.5689646

likfit: maximised log-likelihood = -69.2
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-26.7291" "  0.0050" "  0.0048" " -0.1843" " -0.0041" "  0.7036" " 13.3141" 
Practical Range with cor=0.05 for asymptotic range: 39.88561

likfit: maximised log-likelihood = -20.54
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9816641
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 11 14 11  5  4 10  7  9 12  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5 14 12 12  9  7  9 11  2 10  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 13  9  6 10 13  7  6  4  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  8 15  7  9 10  6  7  7  7 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 13  7 12  8 12 10  7  7  5 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  4 10  6 11 18  6 11  8  8  8 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9942459
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"7595.7019" "  -0.3397" "  -1.7010" " -13.5693" "  -0.3393" "1167.8182" 
        phi 
"   0.2183" 
Practical Range with cor=0.05 for asymptotic range: 0.6540689

likfit: maximised log-likelihood = -84.16
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5975.3843" "   -0.3987" "    1.4119" "   54.7784" "    1.6933" "  534.7932" 
         phi 
"    6.5237" 
Practical Range with cor=0.05 for asymptotic range: 19.54322

likfit: maximised log-likelihood = -77.43
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4277.9575" "    0.3897" "    0.8744" "   -9.0693" "   -0.3719" "  720.7938" 
         phi 
"    0.1024" 
Practical Range with cor=0.05 for asymptotic range: 0.3066844

likfit: maximised log-likelihood = -80.05
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1066.7410" "    0.2218" "    0.1674" "  -23.1940" "   -0.6764" "  510.2046" 
         phi 
"    5.1565" 
Practical Range with cor=0.05 for asymptotic range: 15.44738

likfit: maximised log-likelihood = -77.08
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-2134.8225" "   -0.3818" "    0.4202" "  -40.5412" "   -1.1200" "  206.4318" 
         phi 
"    0.2045" 
Practical Range with cor=0.05 for asymptotic range: 0.6124993

likfit: maximised log-likelihood = -69.43
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"312.1309" "  0.0307" " -0.1015" "-12.2811" " -0.2362" "314.6428" "  4.3657" 
Practical Range with cor=0.05 for asymptotic range: 13.07834

likfit: maximised log-likelihood = -72.98
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"160.3165" "  0.0861" " -0.0624" "-10.1867" " -0.2768" "311.5992" "  0.1356" 
Practical Range with cor=0.05 for asymptotic range: 0.4061928

likfit: maximised log-likelihood = -72.93
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"380.6112" " -0.0397" " -0.0805" " -0.2203" "  0.0205" "268.9891" "  0.1407" 
Practical Range with cor=0.05 for asymptotic range: 0.4214555

likfit: maximised log-likelihood = -71.68
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-78.0161" " -0.0555" "  0.0541" " 15.4041" "  0.3874" "225.4889" "  0.1607" 
Practical Range with cor=0.05 for asymptotic range: 0.4814624

likfit: maximised log-likelihood = -70.18
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"741.8357" " -0.0766" " -0.1936" "-20.3400" " -0.5222" "145.9049" "  0.2010" 
Practical Range with cor=0.05 for asymptotic range: 0.6019784

likfit: maximised log-likelihood = -66.48
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"12.7287" " 0.0003" "-0.0044" "-0.7998" "-0.0205" " 0.2035" " 0.1932" 
Practical Range with cor=0.05 for asymptotic range: 0.5788974

likfit: maximised log-likelihood = -10.59
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9942459
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18 10 12  5 10 13  6 10  6  5  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  8  3 12 14  5  6  9  9 13 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 12 10 13 11  5  9  5  6  6  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 13  9 10 10  5  6  8  8 13  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  8 17 10 11  8  6  9 11  7  2

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5 12 11  7  9  9 10 10  6 10 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  9  9 10 17  8  3 10  8  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6 12  7 14 11 15  8  6 10  6  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17  9  9 16  8  6  7  8  6  6  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  5 14 11  5 12  5  8 11  9 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18  6 10  9  8  6 14  8 12  3  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9992654
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6982.4008" "  -0.3713" "  -1.4820" "  27.5046" "   0.7112" " 782.6571" 
        phi 
"   0.1435" 
Practical Range with cor=0.05 for asymptotic range: 0.429794

likfit: maximised log-likelihood = -80.75
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5990.3037" "   -0.4059" "    1.4254" "   59.5298" "    1.8152" "  504.9523" 
         phi 
"    7.3848" 
Practical Range with cor=0.05 for asymptotic range: 22.12304

likfit: maximised log-likelihood = -76.91
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4090.5952" "    0.3998" "    0.8077" "  -21.4770" "   -0.6891" "  699.5305" 
         phi 
"    0.1850" 
Practical Range with cor=0.05 for asymptotic range: 0.5543402

likfit: maximised log-likelihood = -79.8
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-954.6375" "   0.2263" "   0.1289" " -30.0163" "  -0.8506" " 483.7594" 
        phi 
"   5.0756" 
Practical Range with cor=0.05 for asymptotic range: 15.20509

likfit: maximised log-likelihood = -76.62
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-2113.2525" "   -0.3803" "    0.4118" "  -42.3455" "   -1.1662" "  201.5695" 
         phi 
"    0.1948" 
Practical Range with cor=0.05 for asymptotic range: 0.583659

likfit: maximised log-likelihood = -69.22
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"336.9248" "  0.0338" " -0.1100" "-13.6753" " -0.2715" "304.6885" "  4.4257" 
Practical Range with cor=0.05 for asymptotic range: 13.25815

likfit: maximised log-likelihood = -72.71
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"165.1022" "  0.0860" " -0.0647" "-10.8293" " -0.2939" "310.6030" "  0.1974" 
Practical Range with cor=0.05 for asymptotic range: 0.5914394

likfit: maximised log-likelihood = -72.9
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"340.2191" " -0.0436" " -0.0644" "  3.2173" "  0.1088" "267.6187" "  0.1027" 
Practical Range with cor=0.05 for asymptotic range: 0.3075625

likfit: maximised log-likelihood = -71.63
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-77.3431" " -0.0533" "  0.0534" " 15.2415" "  0.3839" "226.6792" "  0.1608" 
Practical Range with cor=0.05 for asymptotic range: 0.4816398

likfit: maximised log-likelihood = -70.22
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"711.0677" " -0.0804" " -0.1830" "-18.6213" " -0.4787" "149.5136" "  0.1873" 
Practical Range with cor=0.05 for asymptotic range: 0.5611416

likfit: maximised log-likelihood = -66.68
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-101.2686" "   0.0910" "  -0.0036" "  -8.3605" "  -0.2201" " 144.1906" 
        phi 
"   0.1579" 
Practical Range with cor=0.05 for asymptotic range: 0.4729615

likfit: maximised log-likelihood = -66.38
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"568.8537" "  0.0880" " -0.1343" "  0.0269" "  0.0426" "105.5651" "  2.4927" 
Practical Range with cor=0.05 for asymptotic range: 7.467552

likfit: maximised log-likelihood = -63.72
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"190.7224" " -0.0019" " -0.0893" "-24.1300" " -0.6271" " 88.2731" "  0.1340" 
Practical Range with cor=0.05 for asymptotic range: 0.4015307

likfit: maximised log-likelihood = -62.21
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-98.9258" "  0.0325" "  0.0215" "  2.0788" "  0.0633" " 93.3536" "  2.8399" 
Practical Range with cor=0.05 for asymptotic range: 8.507574

likfit: maximised log-likelihood = -62.68
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"10.0488" "-0.0327" "-0.0032" "-2.1930" "-0.0586" "69.1546" " 0.1747" 
Practical Range with cor=0.05 for asymptotic range: 0.5233733

likfit: maximised log-likelihood = -60.13
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"-0.2885" "-0.0004" " 0.0002" " 0.0714" " 0.0018" " 0.0126" " 0.1027" 
Practical Range with cor=0.05 for asymptotic range: 0.3076962

likfit: maximised log-likelihood = 13.05
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9992654
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  9  5  6 10  7  7 12  9 12  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5 11  7 13  8 10  8 10 10 12  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18 11  8 11  9  9  5  8  6  3 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  6 14  7 10 12 10  5 11 10  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 14  7 11  8  8  8  7  8  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 14  5 10 11  7  4 14  4  6 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  8  8  8  9 11  9  9  7 10  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 11 11 10  6  7 11 11  6  9 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 11 11  9  8  7  8  7  9  5  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 13 12  7  8 12  4  8 13  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  9 11  7  6  9 13 11 10  8  2

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 13  5 10  8  6  5  9 13  9 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  9  9 10 11 14  8  7  7  5 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 11  8  9 12 10 12  6  8  7  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 13  7 12 16  8  6  7  4  2 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  7 12 12 12  9  6  9 10  3  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10523445"
[1] "variance explained"
[1] 0.9816337
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"5730.3891" "  -0.1514" "  -1.3192" " -13.2082" "  -0.2995" "2478.0682" 
        phi 
"   0.1330" 
Practical Range with cor=0.05 for asymptotic range: 0.3984464

likfit: maximised log-likelihood = -90.55
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5451.9411" "   -0.4027" "    1.3086" "   59.7584" "    1.8328" "  478.6739" 
         phi 
"    8.7901" 
Practical Range with cor=0.05 for asymptotic range: 26.33272

likfit: maximised log-likelihood = -76.39
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3829.8097" "    0.3116" "    0.7941" "   -4.7021" "   -0.2560" "  977.3365" 
         phi 
"    0.1366" 
Practical Range with cor=0.05 for asymptotic range: 0.409203

likfit: maximised log-likelihood = -82.64
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"880.3347" " -0.1475" " -0.1300" " 25.8722" "  0.7563" "582.1752" "  5.2263" 
Practical Range with cor=0.05 for asymptotic range: 15.65653

likfit: maximised log-likelihood = -78.2
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1362.0470" "   -0.3871" "    0.2631" "  -35.7845" "   -0.9878" "  256.0457" 
         phi 
"    0.1044" 
Practical Range with cor=0.05 for asymptotic range: 0.3127337

likfit: maximised log-likelihood = -71.26
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-27.5608" "  0.0045" "  0.0044" " -0.4889" " -0.0119" "  0.6842" "  9.4193" 
Practical Range with cor=0.05 for asymptotic range: 28.21771

likfit: maximised log-likelihood = -20.67
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9816337
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  8  6 10 11 12  7 16  5  5  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  9  8 10  7 10  9  8 14 10  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 11 13 10  7  5 10  8 13  5  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  6  6 10  8  7 11 15  7  9 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19 12 11 11  7  9  9  8  6  7  1

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 11  7  5  9  7 11 10 10 14  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9943206
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6873.3326" "  -0.3383" "  -1.5546" " -18.2472" "  -0.4599" "1187.0372" 
        phi 
"   0.1716" 
Practical Range with cor=0.05 for asymptotic range: 0.5142127

likfit: maximised log-likelihood = -84.3
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5310.3484" "   -0.4281" "    1.2790" "   58.6030" "    1.7943" "  536.6064" 
         phi 
"    6.6969" 
Practical Range with cor=0.05 for asymptotic range: 20.06208

likfit: maximised log-likelihood = -77.46
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4182.9211" "    0.3672" "    0.8677" "   -2.8321" "   -0.1987" "  747.9425" 
         phi 
"    0.1013" 
Practical Range with cor=0.05 for asymptotic range: 0.3035382

likfit: maximised log-likelihood = -80.37
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1139.1161" "  -0.1789" "  -0.1853" "  24.2504" "   0.7077" " 531.4479" 
        phi 
"   4.6720" 
Practical Range with cor=0.05 for asymptotic range: 13.99612

likfit: maximised log-likelihood = -77.43
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1375.7730" "   -0.3839" "    0.2657" "  -35.8024" "   -0.9888" "  257.9853" 
         phi 
"    0.1891" 
Practical Range with cor=0.05 for asymptotic range: 0.5664974

likfit: maximised log-likelihood = -71.32
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"235.0611" "  0.0277" " -0.0908" "-15.4483" " -0.3211" "312.1772" "  3.9880" 
Practical Range with cor=0.05 for asymptotic range: 11.94691

likfit: maximised log-likelihood = -72.92
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"118.9301" "  0.0865" " -0.0457" " -6.2547" " -0.1735" "310.7203" "  0.1653" 
Practical Range with cor=0.05 for asymptotic range: 0.4952747

likfit: maximised log-likelihood = -72.9
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"510.1820" " -0.0326" " -0.1055" "  1.6728" "  0.0738" "268.7162" "  0.1905" 
Practical Range with cor=0.05 for asymptotic range: 0.5705971

likfit: maximised log-likelihood = -71.67
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
" 28.6751" " -0.0626" "  0.0287" " 13.8556" "  0.3481" "221.8941" "  0.1605" 
Practical Range with cor=0.05 for asymptotic range: 0.4809638

likfit: maximised log-likelihood = -70.04
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"652.5035" " -0.0861" " -0.1736" "-20.5149" " -0.5286" "147.6834" "  0.1878" 
Practical Range with cor=0.05 for asymptotic range: 0.562613

likfit: maximised log-likelihood = -66.58
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 8.4179" " 0.0003" "-0.0035" "-0.8374" "-0.0215" " 0.1978" " 0.1988" 
Practical Range with cor=0.05 for asymptotic range: 0.5955762

likfit: maximised log-likelihood = -10.35
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9943206
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 14 15  6  6  6  6 11  6  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 10 12  9  9  8  4  6  8 10 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 13  6 12 12  4  2  9  7  7 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 11  9  6  8  4 14  8  6 11 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 16  5  6  8 11 10  7  5 10  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 14  9 12 10  4  6 15  6  7  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 13  9  7 14  6  6  7  6  7 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 13 13  4 11  8 10  7  8  5  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 21  8  7  3  8 10 10  4  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 16 12 10  7  8  7 10  6  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 17 14  8  7  6 10  7  9  6  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.999223
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6499.0412" "  -0.3674" "  -1.3916" "  20.7166" "   0.5358" " 765.9479" 
        phi 
"   0.1914" 
Practical Range with cor=0.05 for asymptotic range: 0.5735576

likfit: maximised log-likelihood = -80.57
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-5304.264" "   -0.435" "    1.288" "   63.572" "    1.923" "  511.354" 
        phi 
"    7.850" 
Practical Range with cor=0.05 for asymptotic range: 23.51538

likfit: maximised log-likelihood = -77
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4064.0098" "    0.3769" "    0.8172" "  -14.5099" "   -0.4968" "  723.4539" 
         phi 
"    0.2045" 
Practical Range with cor=0.05 for asymptotic range: 0.6125893

likfit: maximised log-likelihood = -80.09
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1064.2719" "  -0.1832" "  -0.1546" "  31.1753" "   0.8847" " 502.6910" 
        phi 
"   4.7736" 
Practical Range with cor=0.05 for asymptotic range: 14.30031

likfit: maximised log-likelihood = -76.96
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1373.0697" "   -0.3834" "    0.2638" "  -36.4610" "   -1.0059" "  256.0779" 
         phi 
"    0.1046" 
Practical Range with cor=0.05 for asymptotic range: 0.3133004

likfit: maximised log-likelihood = -71.26
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"242.6368" "  0.0303" " -0.0955" "-16.8452" " -0.3564" "301.3790" "  4.0903" 
Practical Range with cor=0.05 for asymptotic range: 12.25345

likfit: maximised log-likelihood = -72.62
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"116.1770" "  0.0868" " -0.0459" " -6.6352" " -0.1835" "310.3159" "  0.1635" 
Practical Range with cor=0.05 for asymptotic range: 0.489912

likfit: maximised log-likelihood = -72.89
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"483.6083" " -0.0367" " -0.0926" "  5.0039" "  0.1592" "266.7318" "  0.1481" 
Practical Range with cor=0.05 for asymptotic range: 0.4435294

likfit: maximised log-likelihood = -71.61
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
" 36.3579" " -0.0608" "  0.0257" " 13.3175" "  0.3344" "223.5759" "  0.1570" 
Practical Range with cor=0.05 for asymptotic range: 0.4702339

likfit: maximised log-likelihood = -70.1
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"625.9915" " -0.0903" " -0.1641" "-18.8644" " -0.4870" "150.7484" "  0.0998" 
Practical Range with cor=0.05 for asymptotic range: 0.29898

likfit: maximised log-likelihood = -66.75
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-10.7237" "  0.1034" " -0.0221" " -7.1227" " -0.1836" "142.8857" "  0.1607" 
Practical Range with cor=0.05 for asymptotic range: 0.4815479

likfit: maximised log-likelihood = -66.3
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"557.9435" "  0.0872" " -0.1347" " -1.3924" "  0.0067" "103.9825" "  0.1867" 
Practical Range with cor=0.05 for asymptotic range: 0.5592581

likfit: maximised log-likelihood = -63.6
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"133.6797" "  0.0106" " -0.0759" "-22.9036" " -0.5942" " 88.1035" "  0.2214" 
Practical Range with cor=0.05 for asymptotic range: 0.6631901

likfit: maximised log-likelihood = -62.19
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"600.4259" "  0.0160" " -0.1291" "  1.2087" "  0.0414" " 70.4405" " 10.4100" 
Practical Range with cor=0.05 for asymptotic range: 31.18544

likfit: maximised log-likelihood = -59.99
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-55.7184" " -0.0452" "  0.0095" " -3.6815" " -0.1022" " 68.6899" "  0.1779" 
Practical Range with cor=0.05 for asymptotic range: 0.5330456

likfit: maximised log-likelihood = -60.07
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 0.4461" "-0.0003" "-0.0001" "-0.0091" "-0.0004" " 0.0114" " 0.1631" 
Practical Range with cor=0.05 for asymptotic range: 0.488479

likfit: maximised log-likelihood = 13.93
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.999223
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 14 14 10  8  7 10  6 13  2  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  6 10  5 10  9  6  8 11 13 14

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 10  8  9  6  3 15  8  8  6 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 18 15  7  9  8 10  8  5  6  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 21 14 14  9  7  4  7  6  3  4 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 14 12  7 10 12  8  6  8  5  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  5  5 13 12 15 11  7  4  8 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 10  9  8 17  9  7  9 12  8  2

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  7  8 10  7 10  8  8 11 11  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 18  7  8 10  8 13  7  5  7  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 11 10 15  5  6  8 10 10  6  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 19  6 10 12  4  5  6 11  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  8 12  3  7 16  7  9  6 11  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5 10 11  5 11 11 10 10  9  7 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18  6 12 10 10  8  6  7  6  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  5 14 14 20 10  6  1  6 11  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10523446"
[1] "variance explained"
[1] 0.9827034
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"5933.5998" "  -0.4210" "  -1.3606" " -25.3571" "  -0.6242" "1960.4480" 
        phi 
"   0.1543" 
Practical Range with cor=0.05 for asymptotic range: 0.4623041

likfit: maximised log-likelihood = -88.56
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5858.9583" "   -0.3996" "    1.3839" "   53.6905" "    1.6740" "  487.5591" 
         phi 
"   12.3716" 
Practical Range with cor=0.05 for asymptotic range: 37.06215

likfit: maximised log-likelihood = -76.24
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4062.3938" "    0.4425" "    0.8363" "   -2.6917" "   -0.2069" "  823.6706" 
         phi 
"    0.1819" 
Practical Range with cor=0.05 for asymptotic range: 0.544922

likfit: maximised log-likelihood = -81.19
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-407.0583" "   0.3434" "   0.0398" " -10.0782" "  -0.3292" " 462.4860" 
        phi 
"   5.3851" 
Practical Range with cor=0.05 for asymptotic range: 16.13244

likfit: maximised log-likelihood = -76.23
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1889.3233" "   0.2643" "  -0.3756" "  32.1060" "   0.9328" " 286.0637" 
        phi 
"   0.1867" 
Practical Range with cor=0.05 for asymptotic range: 0.5594262

likfit: maximised log-likelihood = -72.2
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-13.1535" " -0.0011" "  0.0009" " -0.9728" " -0.0244" "  0.4245" "  2.4168" 
Practical Range with cor=0.05 for asymptotic range: 7.240132

likfit: maximised log-likelihood = -16.84
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9827034
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16  8  6 10 10 11 12  5  7  7  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 10  8 15 10 13  8  9  7  3  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18 10  8 10 10  8  5  7  6  9  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 12 11  9  9 13 12  9  4  2  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 13  7  8 11  8  6  6  7  8 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  7 19  5  8  6  6  9  9 12  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9947385
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6653.0293" "  -0.4101" "  -1.4654" "  -1.8002" "  -0.0579" "1191.8703" 
        phi 
"   0.1888" 
Practical Range with cor=0.05 for asymptotic range: 0.5656469

likfit: maximised log-likelihood = -84.33
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5758.3834" "   -0.3932" "    1.3696" "   57.2228" "    1.7556" "  573.5894" 
         phi 
"    9.6384" 
Practical Range with cor=0.05 for asymptotic range: 28.87396

likfit: maximised log-likelihood = -77.86
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4273.8015" "    0.4385" "    0.8681" "   -9.1677" "   -0.3620" "  770.1801" 
         phi 
"    0.1012" 
Practical Range with cor=0.05 for asymptotic range: 0.3031699

likfit: maximised log-likelihood = -80.62
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-536.2440" "   0.3396" "   0.0593" " -14.0810" "  -0.4253" " 454.6029" 
        phi 
"   5.7144" 
Practical Range with cor=0.05 for asymptotic range: 17.1187

likfit: maximised log-likelihood = -76.08
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1930.9329" "   0.2648" "  -0.3811" "  33.7438" "   0.9732" " 280.9924" 
        phi 
"   0.1807" 
Practical Range with cor=0.05 for asymptotic range: 0.5413749

likfit: maximised log-likelihood = -72.05
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
" 92.1228" " -0.0267" " -0.0754" "-26.5367" " -0.6297" "282.7514" "  2.3201" 
Practical Range with cor=0.05 for asymptotic range: 6.95052

likfit: maximised log-likelihood = -72.1
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-34.9207" "  0.1024" " -0.0139" " -6.5939" " -0.1939" "304.7277" "  0.1992" 
Practical Range with cor=0.05 for asymptotic range: 0.5967045

likfit: maximised log-likelihood = -72.74
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-532.5154" "   0.0463" "   0.0814" " -14.9170" "  -0.4038" " 251.6837" 
        phi 
"   0.1967" 
Practical Range with cor=0.05 for asymptotic range: 0.5891867

likfit: maximised log-likelihood = -71.11
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-587.6154" "   0.1353" "   0.1274" "   6.9535" "   0.1804" " 167.3372" 
        phi 
"   0.1334" 
Practical Range with cor=0.05 for asymptotic range: 0.3995148

likfit: maximised log-likelihood = -67.64
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"424.4863" "  0.0440" " -0.1373" "-20.5451" " -0.5285" "147.0879" "  0.1146" 
Practical Range with cor=0.05 for asymptotic range: 0.3432066

likfit: maximised log-likelihood = -66.55
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 3.2515" "-0.0009" "-0.0016" "-0.4835" "-0.0127" " 0.1951" " 0.1798" 
Practical Range with cor=0.05 for asymptotic range: 0.5387254

likfit: maximised log-likelihood = -10.23
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9947385
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 12  7 10  8  6 11  9  9  9  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6  7 10 14 10 12  5  6 10 11  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 15 11  6  9  9  8  5  8  5  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 15 10 12 10  7  5  4  7 11  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 11  8  6  9  8 10 10  6  7  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 10 10 18  9  7  8  5  4  9  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 19 10 13  6  6 10  5  8  5  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 21 10  8 11  8  7 10  5  7  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20 11 10 11  8  9  9  4  4  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 11 18  5 10 10 10  6 14  3  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  6 12  6 12  4 17  9  6 12  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9992663
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6482.2471" "  -0.3798" "  -1.3872" "  20.2930" "   0.5165" " 800.0928" 
        phi 
"   0.2218" 
Practical Range with cor=0.05 for asymptotic range: 0.6646174

likfit: maximised log-likelihood = -80.94
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5728.6021" "   -0.3911" "    1.3670" "   59.3253" "    1.8119" "  552.4105" 
         phi 
"   10.3734" 
Practical Range with cor=0.05 for asymptotic range: 31.07585

likfit: maximised log-likelihood = -77.48
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4216.0905" "    0.4301" "    0.8440" "  -15.3790" "   -0.5234" "  756.9269" 
         phi 
"    0.1815" 
Practical Range with cor=0.05 for asymptotic range: 0.5438405

likfit: maximised log-likelihood = -80.47
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-530.7842" "   0.3342" "   0.0526" " -17.0742" "  -0.5028" " 447.9281" 
        phi 
"   5.2468" 
Practical Range with cor=0.05 for asymptotic range: 15.71808

likfit: maximised log-likelihood = -75.97
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"1920.9953" "   0.2672" "  -0.3760" "  35.3497" "   1.0150" " 274.0484" 
        phi 
"   0.0987" 
Practical Range with cor=0.05 for asymptotic range: 0.29573

likfit: maximised log-likelihood = -71.84
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
" 84.8575" " -0.0287" " -0.0759" "-27.6556" " -0.6588" "273.9081" "  2.5684" 
Practical Range with cor=0.05 for asymptotic range: 7.694319

likfit: maximised log-likelihood = -71.83
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-33.3711" "  0.1012" " -0.0150" " -7.0490" " -0.2062" "304.5599" "  0.1843" 
Practical Range with cor=0.05 for asymptotic range: 0.5521875

likfit: maximised log-likelihood = -72.73
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-518.1857" "   0.0440" "   0.0750" " -16.6831" "  -0.4500" " 247.4729" 
        phi 
"   0.0994" 
Practical Range with cor=0.05 for asymptotic range: 0.2978166

likfit: maximised log-likelihood = -70.97
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-575.1255" "   0.1360" "   0.1255" "   7.3949" "   0.1921" " 166.8049" 
        phi 
"   0.1362" 
Practical Range with cor=0.05 for asymptotic range: 0.407974

likfit: maximised log-likelihood = -67.61
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"420.4752" "  0.0454" " -0.1345" "-19.5390" " -0.5026" "148.3193" "  0.1957" 
Practical Range with cor=0.05 for asymptotic range: 0.5862867

likfit: maximised log-likelihood = -66.62
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-585.7419" "  -0.0937" "   0.1369" "  -0.8572" "  -0.0645" " 105.2344" 
        phi 
"   2.8238" 
Practical Range with cor=0.05 for asymptotic range: 8.459436

likfit: maximised log-likelihood = -63.69
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-289.5883" "   0.0022" "   0.1082" "  22.7664" "   0.5867" "  90.2556" 
        phi 
"   0.1868" 
Practical Range with cor=0.05 for asymptotic range: 0.5595237

likfit: maximised log-likelihood = -62.39
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"196.2147" " -0.0263" " -0.0464" " -3.7707" " -0.1088" " 99.3352" "  3.2979" 
Practical Range with cor=0.05 for asymptotic range: 9.879709

likfit: maximised log-likelihood = -63.2
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"468.6911" "  0.0311" " -0.0963" "  4.1646" "  0.1184" " 71.7400" "  2.6893" 
Practical Range with cor=0.05 for asymptotic range: 8.05631

likfit: maximised log-likelihood = -60.44
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"457.3566" "  0.0035" " -0.0985" "  0.4087" "  0.0180" " 70.0618" "  2.4602" 
Practical Range with cor=0.05 for asymptotic range: 7.370148

likfit: maximised log-likelihood = -60.24
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"-0.4053" "-0.0002" " 0.0001" "-0.0120" "-0.0004" " 0.0089" " 0.1896" 
Practical Range with cor=0.05 for asymptotic range: 0.5678929

likfit: maximised log-likelihood = 15.97
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9992663
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  6 14 12 13  6  8 10  3  5  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  7  8  6  9  7 12  7 14  9 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 21 14  8  5  8  3  6  5  8 11 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 15  7 13  7  4  5 10  9  6 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  7  8  7 11 18  5  9  7  7 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 13 11 13  7  8  5  5  5  7  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  8 11 10  8 10 12 10  7  5  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20 13  8  3  5  4 12  3 11 10 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 13  7  5  8 10  9 14  8  5  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18  6  7  6  7  8 11  9 11 11  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 14  9  6  7  7  7 11  7 10 15

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  8 14 10  5  6 11 12  7  9  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 11 10  8 13  5 10  8  9 11  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6 14 11  5 12  9  8  7  7 12  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 10  5 14  7  4  9  6  9 13 14

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17  6 10 10  2  5 15 12  7  7  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10523447"
[1] "variance explained"
[1] 0.9819137
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6030.0597" "  -0.1870" "  -1.3467" "   3.5378" "   0.1337" "2438.1186" 
        phi 
"   0.2159" 
Practical Range with cor=0.05 for asymptotic range: 0.6468958

likfit: maximised log-likelihood = -90.41
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-5505.340" "   -0.375" "    1.337" "   70.558" "    2.141" "  488.050" 
        phi 
"   10.736" 
Practical Range with cor=0.05 for asymptotic range: 32.16269

likfit: maximised log-likelihood = -76.41
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3536.0593" "    0.3763" "    0.6904" "  -23.1099" "   -0.7763" "  968.3000" 
         phi 
"    0.1344" 
Practical Range with cor=0.05 for asymptotic range: 0.4026751

likfit: maximised log-likelihood = -82.56
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-755.8939" "   0.1953" "   0.0829" " -34.1647" "  -0.9878" " 559.2284" 
        phi 
"   5.4534" 
Practical Range with cor=0.05 for asymptotic range: 16.33702

likfit: maximised log-likelihood = -77.85
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1656.3238" "   -0.3693" "    0.3137" "  -41.9807" "   -1.1689" "  244.9328" 
         phi 
"    0.1907" 
Practical Range with cor=0.05 for asymptotic range: 0.5713258

likfit: maximised log-likelihood = -70.88
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-32.0148" "  0.0048" "  0.0062" " -0.0896" " -0.0020" "  0.6698" " 14.5649" 
Practical Range with cor=0.05 for asymptotic range: 43.6325

likfit: maximised log-likelihood = -20.01
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9819137
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 11 10  8 11  8  6  6 14  5  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5 10  9  9  7  9 11 10  9 12  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 13  8  7  2 10  6 12  7  9 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 10 11 10  4  8 10  6 13  9  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20 19 10  8  5 12  3  4  9  4  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  3 10  4  8 13 13 15 14  3  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.99421
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"7240.1328" "  -0.3410" "  -1.6013" "  -1.3503" "   0.0033" "1323.2226" 
        phi 
"   0.1922" 
Practical Range with cor=0.05 for asymptotic range: 0.5756712

likfit: maximised log-likelihood = -85.22
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-5359.277" "   -0.390" "    1.305" "   69.444" "    2.110" "  536.221" 
        phi 
"    8.768" 
Practical Range with cor=0.05 for asymptotic range: 26.26546

likfit: maximised log-likelihood = -77.35
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3912.1674" "    0.4220" "    0.7704" "  -21.2657" "   -0.7275" "  750.6756" 
         phi 
"    0.1012" 
Practical Range with cor=0.05 for asymptotic range: 0.3033037

likfit: maximised log-likelihood = -80.4
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1021.6338" "    0.2211" "    0.1406" "  -32.5550" "   -0.9444" "  509.3712" 
         phi 
"    5.0323" 
Practical Range with cor=0.05 for asymptotic range: 15.07543

likfit: maximised log-likelihood = -77.06
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1693.3367" "   -0.3638" "    0.3213" "  -41.9280" "   -1.1683" "  247.0096" 
         phi 
"    0.1948" 
Practical Range with cor=0.05 for asymptotic range: 0.5834737

likfit: maximised log-likelihood = -70.95
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"272.0912" "  0.0221" " -0.0930" "-12.7167" " -0.2465" "307.5292" "  4.2693" 
Practical Range with cor=0.05 for asymptotic range: 12.78983

likfit: maximised log-likelihood = -72.79
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"138.7637" "  0.0888" " -0.0592" "-11.0160" " -0.3056" "306.9250" "  0.1675" 
Practical Range with cor=0.05 for asymptotic range: 0.5017908

likfit: maximised log-likelihood = -72.8
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"639.0383" " -0.0327" " -0.1257" "  6.0040" "  0.2020" "258.7671" "  0.1905" 
Practical Range with cor=0.05 for asymptotic range: 0.5708414

likfit: maximised log-likelihood = -71.35
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"122.0344" " -0.0652" "  0.0186" " 19.1173" "  0.4970" "217.4813" "  0.1605" 
Practical Range with cor=0.05 for asymptotic range: 0.4808512

likfit: maximised log-likelihood = -69.87
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"551.3943" " -0.0568" " -0.1675" "-27.2657" " -0.7150" "136.5215" "  0.2457" 
Practical Range with cor=0.05 for asymptotic range: 0.736115

likfit: maximised log-likelihood = -65.91
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"11.9162" " 0.0010" "-0.0039" "-0.6074" "-0.0153" " 0.2308" " 0.2007" 
Practical Range with cor=0.05 for asymptotic range: 0.601111

likfit: maximised log-likelihood = -11.66
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.99421
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 14 16  6  5 12  5  5  9  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 14 11 10  7  8  7  7  9  8  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20  9 12  4  4  7 10 11  9  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  8 12 10 17  6  5 10  7  9  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  9 12 15  6  8  9  7  4  6 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 11 18 10  6  7  5 11  4  7  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20 15  8  9  3  6  8  8  9  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 11 13 10 11 10  5  7  4  7 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  9 11  7 11  4 13  7  8  4 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 10 10  9  8  9  8 11  3  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 21  9 12  6  8  5  8 11  6  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9990654
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6801.3857" "  -0.4265" "  -1.4464" "  23.4415" "   0.6178" " 897.8858" 
        phi 
"   0.0997" 
Practical Range with cor=0.05 for asymptotic range: 0.2986675

likfit: maximised log-likelihood = -81.92
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5341.2826" "   -0.4045" "    1.3078" "   71.8652" "    2.1712" "  529.6633" 
         phi 
"    9.8848" 
Practical Range with cor=0.05 for asymptotic range: 29.6121

likfit: maximised log-likelihood = -77.18
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3770.2114" "    0.4491" "    0.7217" "  -28.6093" "   -0.9089" "  710.9035" 
         phi 
"    0.1836" 
Practical Range with cor=0.05 for asymptotic range: 0.5500897

likfit: maximised log-likelihood = -79.94
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-955.4053" "   0.2349" "   0.1159" " -36.8663" "  -1.0513" " 483.6674" 
        phi 
"   4.9118" 
Practical Range with cor=0.05 for asymptotic range: 14.71455

likfit: maximised log-likelihood = -76.63
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1687.2812" "   -0.3607" "    0.3177" "  -42.9042" "   -1.1931" "  246.8276" 
         phi 
"    0.1042" 
Practical Range with cor=0.05 for asymptotic range: 0.3122957

likfit: maximised log-likelihood = -70.95
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"279.0332" "  0.0268" " -0.0957" "-13.0711" " -0.2541" "300.0466" "  4.3643" 
Practical Range with cor=0.05 for asymptotic range: 13.07415

likfit: maximised log-likelihood = -72.58
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"148.4215" "  0.0888" " -0.0620" "-11.3681" " -0.3146" "306.3082" "  0.1776" 
Practical Range with cor=0.05 for asymptotic range: 0.531941

likfit: maximised log-likelihood = -72.78
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"606.2070" " -0.0408" " -0.1131" "  8.2587" "  0.2586" "257.3726" "  0.1523" 
Practical Range with cor=0.05 for asymptotic range: 0.456379

likfit: maximised log-likelihood = -71.3
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"107.2015" " -0.0630" "  0.0214" " 19.0531" "  0.4952" "218.1453" "  0.1606" 
Practical Range with cor=0.05 for asymptotic range: 0.4811588

likfit: maximised log-likelihood = -69.9
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"526.5206" " -0.0641" " -0.1603" "-26.7847" " -0.7047" "137.0885" "  0.1072" 
Practical Range with cor=0.05 for asymptotic range: 0.3210285

likfit: maximised log-likelihood = -65.95
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"122.6144" "  0.1238" " -0.0274" "  6.3253" "  0.1867" "122.7043" "  0.1363" 
Practical Range with cor=0.05 for asymptotic range: 0.4084091

likfit: maximised log-likelihood = -65.01
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"591.9945" "  0.0515" " -0.1385" " -1.2599" "  0.0132" "109.7151" "  0.1951" 
Practical Range with cor=0.05 for asymptotic range: 0.5844358

likfit: maximised log-likelihood = -64.05
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"197.6467" "  0.0195" " -0.0888" "-22.1638" " -0.5784" " 94.6494" "  0.1339" 
Practical Range with cor=0.05 for asymptotic range: 0.4011452

likfit: maximised log-likelihood = -62.8
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-440.6609" "   0.0115" "   0.0840" "  -5.1162" "  -0.1415" "  84.1560" 
        phi 
"   3.6786" 
Practical Range with cor=0.05 for asymptotic range: 11.02

likfit: maximised log-likelihood = -61.79
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-418.7417" "  -0.0348" "   0.0918" "  -1.1288" "  -0.0381" "  69.3567" 
        phi 
"   5.2150" 
Practical Range with cor=0.05 for asymptotic range: 15.62271

likfit: maximised log-likelihood = -60.11
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 2.7403" "-0.0009" "-0.0007" "-0.0834" "-0.0023" " 0.0495" " 2.1580" 
Practical Range with cor=0.05 for asymptotic range: 6.464764

likfit: maximised log-likelihood = 1.436
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9990654
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 11 12  7  8  7 11  8  7 10  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 14  7  9 11 11  5  9  7 10  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 16  8  8 15  3  9  7  5  8  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  9 12 13  6 12  8 12  7  5  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19 13  6  8  4  8 13 12  3  4 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  9 13 12 11  7  5  8  7  7 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 13 12 11 10 10  9  6  4  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6 13 12 11  4  9  5  7 13 10 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 17 12 11  5  6  6  8  9  8  6 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  4 16 14  8  7  7 10  6  5  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 18  9  9 14  4  7  7  9  4  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 11  7  9 10 11 15  5  9  6  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 13  7  7 15  7  7 10  7 10  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 10 11 10  8  9  5 10  8  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  8  9  8 12  9  9  7 10 10  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 10  5  8 11 13  6  5 11  7 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10523450"
[1] "variance explained"
[1] 0.983664
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"5807.8580" "  -0.1821" "  -1.3276" " -13.3594" "  -0.3842" "2327.3794" 
        phi 
"   0.1923" 
Practical Range with cor=0.05 for asymptotic range: 0.5760873

likfit: maximised log-likelihood = -90.02
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5787.2419" "   -0.3641" "    1.4044" "   74.1583" "    2.2317" "  487.9708" 
         phi 
"    9.0021" 
Practical Range with cor=0.05 for asymptotic range: 26.96783

likfit: maximised log-likelihood = -76.54
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3377.2023" "    0.3646" "    0.6605" "  -20.8577" "   -0.6972" "  997.3800" 
         phi 
"    0.1365" 
Practical Range with cor=0.05 for asymptotic range: 0.408961

likfit: maximised log-likelihood = -82.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-513.6252" "   0.1989" "   0.0336" " -31.8813" "  -0.9094" " 572.4262" 
        phi 
"   5.3813" 
Practical Range with cor=0.05 for asymptotic range: 16.12089

likfit: maximised log-likelihood = -78.05
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1518.1288" "   -0.3695" "    0.2807" "  -43.4689" "   -1.2032" "  251.5183" 
         phi 
"    0.1029" 
Practical Range with cor=0.05 for asymptotic range: 0.3082709

likfit: maximised log-likelihood = -71.11
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-32.0950" "  0.0043" "  0.0064" " -0.0500" " -0.0012" "  0.6598" " 12.1993" 
Practical Range with cor=0.05 for asymptotic range: 36.54595

likfit: maximised log-likelihood = -20.14
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.983664
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  9 10  4  7  9 12  6 11 10  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  7 10 10  6  4 10  7 11 11 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 13 10  8  9  9  5 11  6  7  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 10  6 10  8 11  7 10  8  6  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18 13 13  7  7  6 13  7  7  4  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  5  7  7 10  5 12 16  6  5 16 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9949299
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"7178.5924" "  -0.3998" "  -1.6349" " -30.4496" "  -0.8357" "1111.1963" 
        phi 
"   3.2293" 
Practical Range with cor=0.05 for asymptotic range: 9.674168

likfit: maximised log-likelihood = -83.73
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5697.0972" "   -0.3852" "    1.3842" "   72.6317" "    2.1902" "  533.1125" 
         phi 
"    6.9215" 
Practical Range with cor=0.05 for asymptotic range: 20.73499

likfit: maximised log-likelihood = -77.39
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3777.0705" "    0.4303" "    0.7499" "  -15.8795" "   -0.5662" "  742.4669" 
         phi 
"    0.1822" 
Practical Range with cor=0.05 for asymptotic range: 0.5459152

likfit: maximised log-likelihood = -80.31
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-781.2844" "   0.2333" "   0.0945" " -28.4279" "  -0.8168" " 518.9522" 
        phi 
"   4.9516" 
Practical Range with cor=0.05 for asymptotic range: 14.83381

likfit: maximised log-likelihood = -77.22
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1559.7764" "   -0.3610" "    0.2895" "  -43.1177" "   -1.1945" "  257.2232" 
         phi 
"    0.1667" 
Practical Range with cor=0.05 for asymptotic range: 0.4992647

likfit: maximised log-likelihood = -71.3
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"220.5209" "  0.0219" " -0.0961" "-20.7278" " -0.4785" "283.2389" "  2.8019" 
Practical Range with cor=0.05 for asymptotic range: 8.393814

likfit: maximised log-likelihood = -72.11
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"169.1188" "  0.0932" " -0.0749" "-15.3337" " -0.4176" "304.0751" "  0.1676" 
Practical Range with cor=0.05 for asymptotic range: 0.5020471

likfit: maximised log-likelihood = -72.72
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"343.3635" "  0.0237" " -0.1118" "-16.6798" " -0.4071" "218.8578" "  0.0823" 
Practical Range with cor=0.05 for asymptotic range: 0.2465656

likfit: maximised log-likelihood = -69.92
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-822.7331" "   0.0987" "   0.2064" "  18.8096" "   0.4738" " 160.9998" 
        phi 
"   0.1357" 
Practical Range with cor=0.05 for asymptotic range: 0.4063919

likfit: maximised log-likelihood = -67.31
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-11.4695" " -0.0959" "  0.0292" "  8.7911" "  0.2324" "145.5489" "  0.1000" 
Practical Range with cor=0.05 for asymptotic range: 0.2995207

likfit: maximised log-likelihood = -66.46
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 9.6169" "-0.0007" "-0.0034" "-0.6894" "-0.0178" " 0.2063" " 0.1269" 
Practical Range with cor=0.05 for asymptotic range: 0.3802599

likfit: maximised log-likelihood = -10.7
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9949299
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 13 12 11 11  3  6  7  4  2 17

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 12  8  7  7  8 12  8  9 12  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 11 11 10 12  9  6  7  7  5  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 14  6  7  8  8  9 13  6 10  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 19  8 11  7  6  7  6  6  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 15  8  7  8  7 16  6  5  7  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 14 13 12  8  7  7  8  5  2  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6  5  7 15  8  8 11  8 11  6 15

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 15 16  6  5  5  9  4 11  7  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 14 11  5  4  9  4 12  6 11 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 16  9 13 12  3 10  5  4  9  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9992934
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6662.3826" "  -0.3774" "  -1.4552" "   4.3878" "   0.0599" " 701.4039" 
        phi 
"   0.2039" 
Practical Range with cor=0.05 for asymptotic range: 0.6107067

likfit: maximised log-likelihood = -79.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5638.1791" "   -0.3885" "    1.3767" "   75.0071" "    2.2511" "  517.5170" 
         phi 
"    8.5061" 
Practical Range with cor=0.05 for asymptotic range: 25.48198

likfit: maximised log-likelihood = -77.07
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3640.6022" "    0.4243" "    0.7009" "  -25.7869" "   -0.8200" "  733.0986" 
         phi 
"    0.1827" 
Practical Range with cor=0.05 for asymptotic range: 0.5474661

likfit: maximised log-likelihood = -80.2
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-707.7159" "   0.2303" "   0.0679" " -33.8193" "  -0.9547" " 497.3319" 
        phi 
"   4.9550" 
Practical Range with cor=0.05 for asymptotic range: 14.84397

likfit: maximised log-likelihood = -76.86
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1550.2623" "   -0.3614" "    0.2853" "  -44.1951" "   -1.2220" "  252.8047" 
         phi 
"    0.1033" 
Practical Range with cor=0.05 for asymptotic range: 0.309482

likfit: maximised log-likelihood = -71.15
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"222.4255" "  0.0213" " -0.0991" "-21.9980" " -0.5106" "273.6639" "  3.2794" 
Practical Range with cor=0.05 for asymptotic range: 9.824288

likfit: maximised log-likelihood = -71.81
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"174.0051" "  0.0916" " -0.0771" "-16.0149" " -0.4359" "303.1915" "  0.1671" 
Practical Range with cor=0.05 for asymptotic range: 0.500574

likfit: maximised log-likelihood = -72.69
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"328.8441" "  0.0230" " -0.1059" "-15.4129" " -0.3754" "223.0498" "  0.2196" 
Practical Range with cor=0.05 for asymptotic range: 0.6577417

likfit: maximised log-likelihood = -70.08
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-784.8980" "   0.0975" "   0.1938" "  16.5741" "   0.4166" " 166.4814" 
        phi 
"   0.1368" 
Practical Range with cor=0.05 for asymptotic range: 0.4098382

likfit: maximised log-likelihood = -67.6
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-30.7224" " -0.0966" "  0.0348" "  9.4675" "  0.2496" "144.3123" "  0.1619" 
Practical Range with cor=0.05 for asymptotic range: 0.4850345

likfit: maximised log-likelihood = -66.38
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-490.7257" "  -0.0768" "   0.1049" "  -5.9771" "  -0.2035" " 110.9075" 
        phi 
"   3.0536" 
Practical Range with cor=0.05 for asymptotic range: 9.147766

likfit: maximised log-likelihood = -64.14
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-262.6526" "  -0.0356" "   0.0973" "  18.0322" "   0.4562" " 106.6807" 
        phi 
"   0.1347" 
Practical Range with cor=0.05 for asymptotic range: 0.4036363

likfit: maximised log-likelihood = -63.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"302.8709" " -0.0303" " -0.0749" " -6.8254" " -0.1910" " 92.8967" "  3.7225" 
Practical Range with cor=0.05 for asymptotic range: 11.15172

likfit: maximised log-likelihood = -62.62
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-522.6392" "  -0.0357" "   0.1130" "  -1.8772" "  -0.0592" "  68.8964" 
        phi 
"   8.8442" 
Practical Range with cor=0.05 for asymptotic range: 26.49497

likfit: maximised log-likelihood = -59.91
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"85.7797" "-0.0294" "-0.0231" "-3.8477" "-0.1030" "69.5851" " 0.1736" 
Practical Range with cor=0.05 for asymptotic range: 0.5200686

likfit: maximised log-likelihood = -60.18
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 0.6498" "-0.0003" "-0.0001" " 0.0029" " 0.0000" " 0.0093" " 0.1961" 
Practical Range with cor=0.05 for asymptotic range: 0.5873123

likfit: maximised log-likelihood = 15.61
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9992934
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9 17  7  7 17  7  9  9  8  4  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  5  9  9 10  4  7 12 12 14 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 10 15  7  9 10  7  9  6  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 11 12  9  3  7  6 11 10 12  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 15  7 14  8  8  5  5  6  6 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  8 13 12  7  6  6  8  5 17  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  6 13 17  7  3  6  4  7 12 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6  6  7  8  4 14 13  9 12  9 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 13 10  9  7  5  4 10  6 15  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 13 13 12  7 13  8  6  1  3 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  9 12 12 15  5  5  8 10  8  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  8 10 10  9 10 10  7 10  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 12 12  6  8  8  4 11  7 10 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 14 12  8  9 11  7  6  8  9  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 13  9 10  7 11  6  5 12  6  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  9 14 10  8  9 12  5  7  5 11

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10528846"
[1] "variance explained"
[1] 0.9816278
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"5185.0101" "  -0.0974" "  -1.1785" "   0.7165" "   0.0580" "1850.1375" 
        phi 
"   0.2178" 
Practical Range with cor=0.05 for asymptotic range: 0.652406

likfit: maximised log-likelihood = -88.07
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5249.6269" "   -0.4049" "    1.2689" "   61.8887" "    1.8982" "  497.2207" 
         phi 
"    8.5933" 
Practical Range with cor=0.05 for asymptotic range: 25.7433

likfit: maximised log-likelihood = -76.72
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3841.2908" "    0.2685" "    0.7960" "   -6.7849" "   -0.2993" "  914.0630" 
         phi 
"    0.1364" 
Practical Range with cor=0.05 for asymptotic range: 0.4085696

likfit: maximised log-likelihood = -82.07
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-855.0370" "   0.1847" "   0.1141" " -29.3664" "  -0.8470" " 547.8925" 
        phi 
"   5.2790" 
Practical Range with cor=0.05 for asymptotic range: 15.81441

likfit: maximised log-likelihood = -77.68
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1452.7387" "   -0.3755" "    0.2782" "  -37.5236" "   -1.0347" "  255.6576" 
         phi 
"    0.1030" 
Practical Range with cor=0.05 for asymptotic range: 0.3084303

likfit: maximised log-likelihood = -71.24
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-29.0089" "  0.0049" "  0.0052" " -0.2460" " -0.0054" "  0.4225" "  7.0650" 
Practical Range with cor=0.05 for asymptotic range: 21.16502

likfit: maximised log-likelihood = -16.7
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9816278
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 11  9  9 10  5  7 11  9  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13  8  6 11  5  7 11  8 10  9 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20  9 11 11  7  4  6 11  8 11  2

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  9 10  8  6  9  8 15  6  9 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 21 14 13  7  9  7  5  3  8  9  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  4 11  9 12  6  7 12  5 15  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9940979
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6346.5314" "  -0.2436" "  -1.4262" "  -6.0200" "  -0.1360" " 864.3812" 
        phi 
"   0.2223" 
Practical Range with cor=0.05 for asymptotic range: 0.66596

likfit: maximised log-likelihood = -81.6
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5010.2377" "   -0.4301" "    1.2173" "   60.4556" "    1.8570" "  553.6800" 
         phi 
"    8.0101" 
Practical Range with cor=0.05 for asymptotic range: 23.99602

likfit: maximised log-likelihood = -77.67
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4197.0212" "    0.3119" "    0.8725" "   -4.4888" "   -0.2342" "  740.7201" 
         phi 
"    0.1603" 
Practical Range with cor=0.05 for asymptotic range: 0.4801175

likfit: maximised log-likelihood = -80.29
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1088.3390" "    0.2084" "    0.1643" "  -28.0041" "   -0.8072" "  510.8864" 
         phi 
"    5.0386" 
Practical Range with cor=0.05 for asymptotic range: 15.09438

likfit: maximised log-likelihood = -77.09
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1475.8326" "   -0.3723" "    0.2832" "  -37.3350" "   -1.0302" "  257.6311" 
         phi 
"    0.1930" 
Practical Range with cor=0.05 for asymptotic range: 0.5782769

likfit: maximised log-likelihood = -71.31
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"175.2568" "  0.0287" " -0.0770" "-15.0455" " -0.3131" "316.9437" "  4.3044" 
Practical Range with cor=0.05 for asymptotic range: 12.89495

likfit: maximised log-likelihood = -73.05
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"259.3708" "  0.0592" " -0.0680" " -3.0396" " -0.0751" "304.8779" "  5.2463" 
Practical Range with cor=0.05 for asymptotic range: 15.71662

likfit: maximised log-likelihood = -72.7
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"516.7291" "  0.0092" " -0.1366" "-11.0055" " -0.2556" "247.0149" " 10.0765" 
Practical Range with cor=0.05 for asymptotic range: 30.18658

likfit: maximised log-likelihood = -70.68
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"156.0684" " -0.0600" "  0.0052" " 16.9251" "  0.4527" "212.5865" "  0.0976" 
Practical Range with cor=0.05 for asymptotic range: 0.2925226

likfit: maximised log-likelihood = -69.68
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"863.9372" " -0.1152" " -0.2096" "-16.6705" " -0.4168" "128.6844" "  0.1361" 
Practical Range with cor=0.05 for asymptotic range: 0.4075786

likfit: maximised log-likelihood = -65.41
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 4.9816" " 0.0016" "-0.0023" "-0.5115" "-0.0127" " 0.0986" " 0.2008" 
Practical Range with cor=0.05 for asymptotic range: 0.6013915

likfit: maximised log-likelihood = -4.426
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9940979
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19 14 11  4  7  4  5  7  8  9 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8 11  7  8 12  7  8 16  3 13  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19 12  8 13  8  6  7  8 10  4  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  8  8  9 13 14  6 10  6 11  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 17  8  8  8  7  9  8 10 10  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 11  7  7  9 13  8  5 14  5 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  6  4  9 10  7 14  9  6 12  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  1 10  7  9  8  6 11  6 13 15 14

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19 15  8  8 12  7  9  5  8  7  2

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 15 15  7  7  3 11 10  9  7  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 10  7  7  1 10 16  7 10 12  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9991649
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6227.6195" "  -0.3134" "  -1.3417" "  19.3757" "   0.5104" " 816.8953" 
        phi 
"   0.1777" 
Practical Range with cor=0.05 for asymptotic range: 0.5324291

likfit: maximised log-likelihood = -81.12
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4998.3474" "   -0.4425" "    1.2232" "   64.0547" "    1.9496" "  544.5263" 
         phi 
"    8.4925" 
Practical Range with cor=0.05 for asymptotic range: 25.44132

likfit: maximised log-likelihood = -77.5
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-4152.4881" "    0.3336" "    0.8453" "  -12.0129" "   -0.4254" "  719.3495" 
         phi 
"    0.0994" 
Practical Range with cor=0.05 for asymptotic range: 0.2976631

likfit: maximised log-likelihood = -80.04
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1077.1885" "    0.2204" "    0.1521" "  -32.2350" "   -0.9149" "  490.3815" 
         phi 
"    5.0409" 
Practical Range with cor=0.05 for asymptotic range: 15.10132

likfit: maximised log-likelihood = -76.74
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1478.1532" "   -0.3706" "    0.2823" "  -37.9782" "   -1.0468" "  256.6691" 
         phi 
"    0.1766" 
Practical Range with cor=0.05 for asymptotic range: 0.5290308

likfit: maximised log-likelihood = -71.28
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"171.9386" "  0.0329" " -0.0786" "-15.9235" " -0.3351" "308.9768" "  4.4145" 
Practical Range with cor=0.05 for asymptotic range: 13.22468

likfit: maximised log-likelihood = -72.83
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"260.4755" "  0.0570" " -0.0672" " -2.6328" " -0.0651" "305.4760" "  5.1767" 
Practical Range with cor=0.05 for asymptotic range: 15.50813

likfit: maximised log-likelihood = -72.72
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"560.8023" "  0.0067" " -0.1433" " -9.7557" " -0.2238" "255.9295" " 12.4781" 
Practical Range with cor=0.05 for asymptotic range: 37.38091

likfit: maximised log-likelihood = -70.78
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"142.5303" " -0.0603" "  0.0110" " 18.3446" "  0.4897" "208.7364" "  0.1580" 
Practical Range with cor=0.05 for asymptotic range: 0.4734599

likfit: maximised log-likelihood = -69.52
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"837.9150" " -0.1213" " -0.2002" "-15.1259" " -0.3779" "130.9821" "  0.1358" 
Practical Range with cor=0.05 for asymptotic range: 0.4066938

likfit: maximised log-likelihood = -65.56
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"271.6057" "  0.0955" " -0.0943" "-12.7513" " -0.3190" "128.8192" "  0.1779" 
Practical Range with cor=0.05 for asymptotic range: 0.5330149

likfit: maximised log-likelihood = -65.42
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"204.7192" "  0.0807" " -0.0254" " 14.4986" "  0.4097" "110.0548" "  0.1796" 
Practical Range with cor=0.05 for asymptotic range: 0.5380448

likfit: maximised log-likelihood = -64.08
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"238.6344" "  0.0571" " -0.0913" "-16.5000" " -0.4139" " 87.6252" "  0.1814" 
Practical Range with cor=0.05 for asymptotic range: 0.54345

likfit: maximised log-likelihood = -62.14
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"286.8688" " -0.0350" " -0.0581" " -0.1709" " -0.0113" " 92.3654" "  2.9360" 
Practical Range with cor=0.05 for asymptotic range: 8.795421

likfit: maximised log-likelihood = -62.59
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"525.3977" "  0.0342" " -0.1128" "  2.2385" "  0.0700" " 68.6726" "  8.1643" 
Practical Range with cor=0.05 for asymptotic range: 24.45802

likfit: maximised log-likelihood = -59.92
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
" 2.4556" " 0.0002" "-0.0005" " 0.0291" " 0.0010" " 0.0349" " 0.1642" 
Practical Range with cor=0.05 for asymptotic range: 0.4918324

likfit: maximised log-likelihood = 4.389
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9991649
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 10 13  7 15  8 12  7  8  4  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 12  4 10  5 10 13  5 10  9  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18 10  6  7  9 10  7  9  8 12  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 13 13  9  5 12 13  6 12  4  7  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18 12 11 11 11  5  5  7  4  9  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  9 13  7  8  7 13 11  8  9  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14  9  7  9  8  9  5  6  9 18  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  8  6  7  7 10 11 12 14 10  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 13 16  7  7  9  8  6  5  5  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7 16  9  7 12  9  9 12  4  9  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  6  8 11  9  6 10  9 10  6 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 12 10 14  7  4 10  9  6 11  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 10  6 12 13  9  7  9 10  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18  9  7 12  6 11  9 10  4  5  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  8 10 10  8  7 11 10 11 11  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  9 14  7 11  6  6  9  9  5  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "removing logger:"
[1] "10528849"
[1] "variance explained"
[1] 0.9824809
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"5993.0427" "  -0.1691" "  -1.3516" "  -3.9589" "  -0.1115" "2041.2589" 
        phi 
"   0.2173" 
Practical Range with cor=0.05 for asymptotic range: 0.6511213

likfit: maximised log-likelihood = -88.9
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5731.4359" "   -0.3347" "    1.3637" "   59.9775" "    1.8208" "  548.1156" 
         phi 
"   10.7359" 
Practical Range with cor=0.05 for asymptotic range: 32.16202

likfit: maximised log-likelihood = -77.4
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3135.7713" "    0.3353" "    0.6233" "  -13.9314" "   -0.4920" "  998.3276" 
         phi 
"    0.1781" 
Practical Range with cor=0.05 for asymptotic range: 0.5334918

likfit: maximised log-likelihood = -82.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-702.9663" "   0.1922" "   0.0828" " -27.7283" "  -0.7932" " 559.7598" 
        phi 
"   5.6651" 
Practical Range with cor=0.05 for asymptotic range: 16.97127

likfit: maximised log-likelihood = -77.85
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1563.5650" "   -0.4043" "    0.3030" "  -38.3342" "   -1.0507" "  237.7888" 
         phi 
"    0.2124" 
Practical Range with cor=0.05 for asymptotic range: 0.6361498

likfit: maximised log-likelihood = -70.63
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-31.3339" "  0.0044" "  0.0062" " -0.0787" " -0.0025" "  0.5460" " 18.0398" 
Practical Range with cor=0.05 for asymptotic range: 54.04255

likfit: maximised log-likelihood = -17.84
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9824809
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  1 17 15 10 12  9  4  5  9  6 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12  8  8  8  6  8  8  7 11 14 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 19 12  5  7 10  5  5 10  5  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  8 10 12  7 10 12 10  7 11  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19 10  7 12 10  6 11  8  6  8  3

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  7  6  6 11 10  8 14 10 12 11  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9943838
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"7246.4520" "  -0.4045" "  -1.6420" " -25.7603" "  -0.6757" "1013.8000" 
        phi 
"   3.5001" 
Practical Range with cor=0.05 for asymptotic range: 10.48527

likfit: maximised log-likelihood = -82.94
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5631.1170" "   -0.3499" "    1.3379" "   56.9880" "    1.7399" "  588.8664" 
         phi 
"    8.5871" 
Practical Range with cor=0.05 for asymptotic range: 25.72472

likfit: maximised log-likelihood = -78.16
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3485.2000" "    0.4039" "    0.7044" "   -7.6918" "   -0.3312" "  790.0596" 
         phi 
"    0.1943" 
Practical Range with cor=0.05 for asymptotic range: 0.5820511

likfit: maximised log-likelihood = -80.83
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-981.3153" "   0.2331" "   0.1481" " -22.9678" "  -0.6691" " 508.4680" 
        phi 
"   4.9482" 
Practical Range with cor=0.05 for asymptotic range: 14.82358

likfit: maximised log-likelihood = -77.05
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1605.9369" "   -0.3953" "    0.3124" "  -37.7630" "   -1.0366" "  244.5830" 
         phi 
"    0.1035" 
Practical Range with cor=0.05 for asymptotic range: 0.3100337

likfit: maximised log-likelihood = -70.87
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"410.6158" "  0.0263" " -0.1184" "-10.0684" " -0.1708" "289.8489" "  4.6254" 
Practical Range with cor=0.05 for asymptotic range: 13.85656

likfit: maximised log-likelihood = -72.28
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-120.3630" "   0.0940" "  -0.0053" " -12.2115" "  -0.3500" " 289.0185" 
        phi 
"   0.1642" 
Practical Range with cor=0.05 for asymptotic range: 0.4919461

likfit: maximised log-likelihood = -72.29
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"805.9945" "  0.0097" " -0.2175" "-20.4563" " -0.5063" "272.5344" " 19.6983" 
Practical Range with cor=0.05 for asymptotic range: 59.01096

likfit: maximised log-likelihood = -70.43
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"226.4524" " -0.0829" " -0.0269" "  6.2093" "  0.1468" "207.3587" "  0.1571" 
Practical Range with cor=0.05 for asymptotic range: 0.4706229

likfit: maximised log-likelihood = -69.46
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"668.4786" " -0.0871" " -0.1803" "-22.0423" " -0.5642" "143.2124" "  0.1020" 
Practical Range with cor=0.05 for asymptotic range: 0.3055904

likfit: maximised log-likelihood = -66.32
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
    beta0     beta1     beta2     beta3     beta4   sigmasq       phi 
"11.1810" "-0.0005" "-0.0043" "-0.9632" "-0.0251" " 0.1373" " 0.1843" 
Practical Range with cor=0.05 for asymptotic range: 0.5520702

likfit: maximised log-likelihood = -7.243
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9943838
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 13  6 15  6 12  7  7  8  5  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  3  6  7 14 15  9 12  9  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 18  8  7  5 11  6 13  7  5 14  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10  5 12  7  3  9  7 16  9 15  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 19 10 21 10  6  7  4  5  6  7  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 11 14 12  6  9  6  7 11 11  2

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 12 17  7  8  3  8  8  7  8  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  1  2 10 12 10  7 16 17  9  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 17 11 12  4  4  9  7  5  8  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 14  8 12  6  3  6 11  9 10 10

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 14 11  9 10  7  3  4 11  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
[1] "variance explained"
[1] 0.9991503
[1] "interpolating residuals"
[1] "interpolating trend"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"6085.6928" "  -0.4138" "  -1.3227" "   7.7321" "   0.1748" "1008.3575" 
        phi 
"   0.1331" 
Practical Range with cor=0.05 for asymptotic range: 0.3987072

likfit: maximised log-likelihood = -82.91
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-5726.4472" "   -0.3556" "    1.3650" "   59.9599" "    1.8158" "  545.6669" 
         phi 
"    9.2721" 
Practical Range with cor=0.05 for asymptotic range: 27.77682

likfit: maximised log-likelihood = -77.47
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-3168.3670" "    0.4084" "    0.6167" "  -16.9652" "   -0.5660" "  811.8702" 
         phi 
"    0.1016" 
Practical Range with cor=0.05 for asymptotic range: 0.3044058

likfit: maximised log-likelihood = -81.07
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-771.6750" "   0.2351" "   0.0908" " -28.7549" "  -0.8154" " 493.5311" 
        phi 
"   5.0465" 
Practical Range with cor=0.05 for asymptotic range: 15.11798

likfit: maximised log-likelihood = -76.8
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
       beta0        beta1        beta2        beta3        beta4      sigmasq 
"-1571.8675" "   -0.3945" "    0.3024" "  -39.0194" "   -1.0686" "  242.5851" 
         phi 
"    0.1676" 
Practical Range with cor=0.05 for asymptotic range: 0.5021995

likfit: maximised log-likelihood = -70.8
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "i=6"
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"434.3141" "  0.0280" " -0.1244" "-10.4189" " -0.1795" "286.9973" "  4.5964" 
Practical Range with cor=0.05 for asymptotic range: 13.76947

likfit: maximised log-likelihood = -72.2
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-81.0673" "  0.0934" " -0.0169" "-13.7931" " -0.3909" "286.5869" "  0.1009" 
Practical Range with cor=0.05 for asymptotic range: 0.3024227

likfit: maximised log-likelihood = -72.22
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"738.1514" "  0.0053" " -0.1990" "-18.7807" " -0.4646" "276.4062" " 18.7771" 
Practical Range with cor=0.05 for asymptotic range: 56.25104

likfit: maximised log-likelihood = -70.67
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"193.5070" " -0.0835" " -0.0171" "  7.5368" "  0.1810" "205.0480" "  0.1575" 
Practical Range with cor=0.05 for asymptotic range: 0.4718851

likfit: maximised log-likelihood = -69.37
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"612.6719" " -0.0898" " -0.1657" "-20.9204" " -0.5362" "147.1314" "  0.2136" 
Practical Range with cor=0.05 for asymptotic range: 0.639972

likfit: maximised log-likelihood = -66.55
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-343.7460" "   0.0047" "   0.0668" "  -4.7633" "  -0.1600" " 135.0238" 
        phi 
"   0.0719" 
Practical Range with cor=0.05 for asymptotic range: 0.2154747

likfit: maximised log-likelihood = -65.82
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"383.2003" "  0.1095" " -0.0895" "  2.4938" "  0.0823" "112.1283" "  0.1815" 
Practical Range with cor=0.05 for asymptotic range: 0.5438864

likfit: maximised log-likelihood = -64.24
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"451.8339" "  0.0340" " -0.1500" "-24.3387" " -0.6249" " 77.3049" "  0.1861" 
Practical Range with cor=0.05 for asymptotic range: 0.5574105

likfit: maximised log-likelihood = -61.08
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"111.0004" " -0.0466" " -0.0156" "  1.5951" "  0.0358" " 90.4575" "  2.7976" 
Practical Range with cor=0.05 for asymptotic range: 8.380713

likfit: maximised log-likelihood = -62.41
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.

WARNING: estimated range is less than 1 tenth of the minimum distance between two points. Consider re-examine the model excluding spatial dependence
likfit: estimated model parameters:
      beta0       beta1       beta2       beta3       beta4     sigmasq 
"-240.0647" "   0.0213" "   0.0502" "   0.2016" "   0.0013" "  69.3206" 
        phi 
"   0.1772" 
Practical Range with cor=0.05 for asymptotic range: 0.5309299

likfit: maximised log-likelihood = -60.15
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
variog: computing omnidirectional variogram
kappa not used for the exponential correlation function
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
likfit: estimated model parameters:
     beta0      beta1      beta2      beta3      beta4    sigmasq        phi 
"-10.9464" " -0.0008" "  0.0019" " -0.3035" " -0.0084" "  0.0350" "  3.4209" 
Practical Range with cor=0.05 for asymptotic range: 10.2481

likfit: maximised log-likelihood = 4.394
[1] "saving prediction meta to metaFolder"
NULL
variog: computing variogram for direction = 45 degrees (0.785 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
variog: computing variogram for direction = 135 degrees (2.356 radians)
        tolerance angle = 22.5 degrees (0.393 radians)
NULL
NULL
krige.conv: model with covariates matrix provided by the user
krige.conv: sampling from the predictive distribution (conditional simulations)
krige.conv: Kriging performed using global neighbourhood 
[1] "variance explained"
[1] 0.9991503
[1] "interpolating residuals"
[1] "interpolating trend"
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  7 10 10 13  7  8  5  5  7 13

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  8  8 11  9 14  9  9  9  7  7  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 11 10 11  6 12 12  4 10  2  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11 12 10  6  9 11 11  7  7  8  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 13 12  7 11 11  5  9  4  5  9

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15 10 18  6 14  6 10  5  3  7  6

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 12 20  9  4  9 10  6  4  8 11  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  4  6  3  7 10 14 11 12 11 10 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 20 11 15  7 11 13  2  3  4  7  7

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 10 12  9  4  6  7 16  5 10  9 12

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 16 13 12  8  9  7  9 10  3  9  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 15  7 11  9  9  8  5 11  8 12  5

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 11  9  4 12  7  8  4 13 10  7 15

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  6 14  7 11 13 10  8  6 10 11  4

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency  9  5 12 11  7 11  9 13  9  6  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
krige.bayes: model with mean defined by covariates provided by the user
krige.bayes: computing the discrete posterior of phi/tausq.rel
krige.bayes: computing the posterior probabilities.
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 

krige.bayes: sampling from posterior distribution
krige.bayes: sample from the (joint) posterior of phi and tausq.rel
           1  2  3  4  5  6  7  8  9 10 11
phi       20 25 30 35 40 45 50 55 60 65 70
tausq.rel  0  0  0  0  0  0  0  0  0  0  0
frequency 14 18  5  8  8  8  7 12  3  9  8

krige.bayes: starting prediction at the provided locations
krige.bayes: phi/tausq.rel samples for the predictive are same as for the posterior 
krige.bayes: computing moments of the predictive distribution
krige.bayes: sampling from the predictive
             Number of parameter sets:  11 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
krige.bayes: preparing summaries of the predictive distribution
[1] "saving prediction meta to metaFolder"
NULL
variog: computing omnidirectional variogram
NULL
NULL
    user   system  elapsed 
1506.166  461.740 3361.759 
[1] 6985.453
[1] 18  5
Timing stopped at: 10.405 0.65 12.311 
